{
  "version": 3,
  "sources": ["../../../shared/contexts/AuthContext.tsx", "../../../shared/api/entities/AppUser.js", "../../../shared/utils/routing.ts", "../../../shared/components/ui/button.jsx", "../../@radix-ui/react-slot/src/slot.tsx", "../../@radix-ui/react-compose-refs/src/compose-refs.tsx", "../../clsx/dist/clsx.mjs", "../../class-variance-authority/dist/index.mjs", "../../../shared/utils/permissions.ts", "../../../shared/utils/security.ts", "../../../shared/utils/cn.ts", "../../../shared/components/ui/card.jsx", "../../../shared/components/LoadingSpinner.tsx", "../../../shared/components/AccessDenied.tsx", "../../../shared/components/ProtectedRoute.tsx", "../../../shared/components/ErrorMessage.tsx", "../../../shared/components/ChatSystem.tsx", "../../../shared/hooks/useChat.ts", "../../../shared/hooks/usePresence.ts", "../../../shared/hooks/useOfflineQueue.ts", "../../../shared/api/auth.js", "../../../shared/api/client.js", "../../../shared/api/entities/Player.js", "../../../shared/api/entities.js", "../../../shared/utils/tokenValidation.js", "../../../shared/utils/secureLogger.js", "../../../shared/api/integrations/documentationService.js", "../../../shared/api/integrations/aiService.js", "../../../shared/api/integrations/emailService.js", "../../../shared/api/integrations/fileUpload.js", "../../../shared/api/integrations/imageGeneration.js", "../../../shared/api/integrations.js", "../../../shared/services/authRedirect.ts", "../../../shared/utils/errorHandler.js", "../../../shared/services/chatService.ts", "../../../shared/services/notificationService.ts", "../../../shared/middleware/auth.ts"],
  "sourcesContent": ["import { createContext, useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../lib/firebase';\nimport { filter as filterUsers, update as updateUser } from '../api/entities/AppUser';\nimport { shouldRedirectUser, getRedirectUrl } from '../utils/routing';\nimport type { AuthContextType, User, UserData } from '../types/auth';\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [userData, setUserData] = useState<UserData | null>(null);\n  const [userDataLoading, setUserDataLoading] = useState(false);\n\n  const fetchUserData = async (firebaseUid: string) => {\n    try {\n      setUserDataLoading(true);\n      \n      // Skip API calls if Firebase client is not available\n      if (!firebaseUid) {\n        console.warn('No Firebase UID provided for user data fetch');\n        setUserData(null);\n        return null;\n      }\n\n      const users = await filterUsers({ firebaseUid });\n\n      if (users && users.length > 0) {\n        setUserData(users[0]);\n        return users[0];\n      } else {\n        // Check if this is an admin email that needs userData created\n        const adminEmails = ['leadond@gmail.com', 'kleadon11@gmail.com'];\n        if (user && adminEmails.includes(user.email)) {\n          const emailUsers = await filterUsers({ email: user.email });\n\n          if (emailUsers && emailUsers.length > 0) {\n            const adminUser = emailUsers[0];\n            // Update the user record with firebaseUid\n            await updateUser(adminUser.id, { firebaseUid });\n            setUserData({ ...adminUser, firebaseUid });\n            return { ...adminUser, firebaseUid };\n          } else {\n            setUserData(null);\n            return null;\n          }\n        } else {\n          setUserData(null);\n          return null;\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      // Set mock user data for development if API fails\n      if (process.env.NODE_ENV === 'development') {\n        const port = window.location.port;\n        const role = port === '3001' ? 'player' : 'admin';\n        const mockUserData = {\n          id: firebaseUid,\n          role,\n          status: 'approved',\n          email: user?.email || (port === '3001' ? 'player@example.com' : 'admin@example.com'),\n          name: port === '3001' ? 'Development Player' : 'Development Admin'\n        };\n        setUserData(mockUserData as any);\n        return mockUserData;\n      }\n      setUserData(null);\n      return null;\n    } finally {\n      setUserDataLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // If Firebase auth is not available, show error and set loading to false\n    if (!auth) {\n      console.error('Firebase auth not available. Please check your Firebase configuration.');\n      setLoading(false);\n      return;\n    }\n\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      setUser(user);\n      if (user) {\n        await fetchUserData(user.uid);\n        // Check if user should be redirected to appropriate app\n        const userData = await fetchUserData(user.uid);\n        // Disable redirects in development mode to allow testing both apps\n        if (process.env.NODE_ENV !== 'development' && userData && shouldRedirectUser(userData.role)) {\n          const redirectUrl = getRedirectUrl(userData.role);\n          // Only redirect if we're not already on the correct app\n          if (window.location.href !== redirectUrl) {\n            window.location.href = redirectUrl;\n            return;\n          }\n        }\n      } else {\n        setUserData(null);\n      }\n      setLoading(false);\n    });\n\n    // Fallback: set loading to false after 5 seconds if onAuthStateChanged doesn't fire\n    const timeout = setTimeout(() => {\n      console.warn('Auth initialization timeout. Check Firebase configuration.');\n      setLoading(false);\n    }, 5000);\n\n    return () => {\n      unsubscribe();\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    if (!auth) {\n      throw new Error('Firebase authentication is not available. Please check your Firebase configuration.');\n    }\n    \n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      if (user) {\n        const refreshedUserData = await fetchUserData(user.uid);\n        return { user, userData: refreshedUserData };\n      }\n      return { user: null, userData: null };\n    } catch (error) {\n      console.error('Firebase login error:', error);\n      throw error;\n    }\n  };\n\n  const signup = async (email: string, password: string, firstName: string, lastName: string, role: 'player' | 'parent' = 'player') => {\n    if (!auth) {\n      throw new Error('Firebase authentication is not available. Please check your Firebase configuration.');\n    }\n    \n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      \n      if (user) {\n        // Update display name\n        await updateProfile(user, {\n          displayName: `${firstName} ${lastName}`\n        });\n        \n        // Create user data record (you'll need to implement this API call)\n        const newUserData = {\n          email: email,\n          firstName: firstName,\n          lastName: lastName,\n          role: role,\n          firebaseUid: user.uid\n        };\n        \n        // In a real app, you'd save this to your database\n        setUserData(newUserData as any);\n        \n        return { user, userData: newUserData };\n      }\n      return { user: null, userData: null };\n    } catch (error) {\n      console.error('Firebase signup error:', error);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    if (!auth) {\n      console.warn('Firebase auth not available. Clearing mock session.');\n      setUser(null);\n      setUserData(null);\n      return;\n    }\n    await signOut(auth);\n  };\n\n  const adminEmails = ['leadond@gmail.com', 'kleadon11@gmail.com'];\n  const isAdminEmail = user ? adminEmails.includes(user.email) : false;\n\n  const isAuthorized = userData\n    ? (userData.status === 'approved' && !!userData.role) || (userData.status !== 'pending' && !!userData.role)\n    : isAdminEmail; // Allow admin emails even without userData\n\n  const value = {\n    user,\n    loading,\n    userData,\n    userDataLoading,\n    isAuthorized,\n    login,\n    signup,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && !userDataLoading && children}\n    </AuthContext.Provider>\n  );\n};", "import { firebaseClient } from '../base44Client.js';\n\nexport const list = (options = {}) => {\n  const { sort = '-createdAt', limit = null } = options;\n  return firebaseClient.entities.AppUser.list(sort, limit);\n};\n\nexport const fetchUsers = () => {\n  return list();\n};\n\nexport const filter = (filters = {}, limit = null) => firebaseClient.entities.AppUser.filter(filters, limit);\n\nexport const create = (data) => firebaseClient.entities.AppUser.create(data);\n\nexport const update = (id, data) => firebaseClient.entities.AppUser.update(id, data);\n\nexport const remove = (id) => firebaseClient.entities.AppUser.delete(id);", "// Role-based routing utilities for O7C Hub ecosystem\n\nexport type UserRole = 'admin' | 'coach' | 'player' | 'parent';\n\nexport interface AppConfig {\n  name: string;\n  url: string;\n  allowedRoles: UserRole[];\n  defaultRoute: string;\n}\n\nexport const APP_CONFIGS: Record<string, AppConfig> = {\n  'o7c-hub': {\n    name: 'O7C Hub',\n    url: process.env.NODE_ENV === 'production'\n      ? 'https://o7c-hub.vercel.app'\n      : 'http://localhost:3000',\n    allowedRoles: ['admin', 'coach'],\n    defaultRoute: '/'\n  },\n  'player-portal': {\n    name: 'Player Portal',\n    url: process.env.NODE_ENV === 'production'\n      ? 'https://player-portal.vercel.app'\n      : 'http://localhost:3001',\n    allowedRoles: ['player', 'parent'],\n    defaultRoute: '/'\n  }\n};\n\nexport const getAppForRole = (role: UserRole): string => {\n  if (['admin', 'coach'].includes(role)) {\n    return 'o7c-hub';\n  }\n  if (['player', 'parent'].includes(role)) {\n    return 'player-portal';\n  }\n  return 'player-portal'; // default fallback\n};\n\nexport const getRedirectUrl = (role: UserRole): string => {\n  const appKey = getAppForRole(role);\n  const appConfig = APP_CONFIGS[appKey];\n  return appConfig ? appConfig.url + appConfig.defaultRoute : APP_CONFIGS['player-portal'].url;\n};\n\nexport const hasAccessToApp = (role: UserRole, appKey: string): boolean => {\n  const appConfig = APP_CONFIGS[appKey];\n  return appConfig ? appConfig.allowedRoles.includes(role) : false;\n};\n\nexport const getCurrentApp = (): string => {\n  const hostname = window.location.hostname;\n  const port = window.location.port;\n\n  if (hostname.includes('o7c-hub') || port === '3000') {\n    return 'o7c-hub';\n  }\n  if (hostname.includes('player-portal') || port === '3001') {\n    return 'player-portal';\n  }\n  return 'player-portal'; // default\n};\n\nexport const shouldRedirectUser = (userRole: UserRole): boolean => {\n  const currentApp = getCurrentApp();\n  return !hasAccessToApp(userRole, currentApp);\n};", "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"../../utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n  return (\n    (<Comp\n      className={cn(buttonVariants({ variant, size, className }))}\n      ref={ref}\n      {...props} />)\n  );\n})\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n", "import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\n/* @__NO_SIDE_EFFECTS__ */ export function createSlot(ownerName: string) {\n  const SlotClone = createSlotClone(ownerName);\n  const Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n\n    if (slottable) {\n      // the new element to render is the one passed as a child of `Slottable`\n      const newElement = slottable.props.children;\n\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          // because the new element will be the one rendered, we are only interested\n          // in grabbing its children (`newElement.props.children`)\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement)\n            ? (newElement.props as { children: React.ReactNode }).children\n            : null;\n        } else {\n          return child;\n        }\n      });\n\n      return (\n        <SlotClone {...slotProps} ref={forwardedRef}>\n          {React.isValidElement(newElement)\n            ? React.cloneElement(newElement, undefined, newChildren)\n            : null}\n        </SlotClone>\n      );\n    }\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {children}\n      </SlotClone>\n    );\n  });\n\n  Slot.displayName = `${ownerName}.Slot`;\n  return Slot;\n}\n\nconst Slot = createSlot('Slot');\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\n/* @__NO_SIDE_EFFECTS__ */ function createSlotClone(ownerName: string) {\n  const SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props = mergeProps(slotProps, children.props as AnyProps);\n      // do not pass ref to React.Fragment for React 19 compatibility\n      if (children.type !== React.Fragment) {\n        props.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props);\n    }\n\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst SLOTTABLE_IDENTIFIER = Symbol('radix.slottable');\n\ninterface SlottableProps {\n  children: React.ReactNode;\n}\n\ninterface SlottableComponent extends React.FC<SlottableProps> {\n  __radixId: symbol;\n}\n\n/* @__NO_SIDE_EFFECTS__ */ export function createSlottable(ownerName: string) {\n  const Slottable: SlottableComponent = ({ children }) => {\n    return <>{children}</>;\n  };\n  Slottable.displayName = `${ownerName}.Slottable`;\n  Slottable.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable;\n}\n\nconst Slottable = createSlottable('Slottable');\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(\n  child: React.ReactNode\n): child is React.ReactElement<SlottableProps, typeof Slottable> {\n  return (\n    React.isValidElement(child) &&\n    typeof child.type === 'function' &&\n    '__radixId' in child.type &&\n    child.type.__radixId === SLOTTABLE_IDENTIFIER\n  );\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element.props as { ref?: React.Ref<unknown> }).ref;\n  }\n\n  // Not DEV\n  return (element.props as { ref?: React.Ref<unknown> }).ref || (element as any).ref;\n}\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Slot as Root,\n};\nexport type { SlotProps };\n", "import * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    return ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    ref.current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == 'function') {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n\n    // React <19 will log an error to the console if a callback ref returns a\n    // value. We don't use ref cleanups internally so this will only happen if a\n    // user's ref callback returns a value, which we only expect if they are\n    // using the cleanup functionality added in React 19.\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == 'function') {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]): React.RefCallback<T> {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n", "// Permission checking utilities for role-based access control\n\nimport type { UserRole } from './routing';\n\nexport interface PermissionCheck {\n  resource: string;\n  action: string;\n  roles: UserRole[];\n}\n\nexport const PERMISSIONS: PermissionCheck[] = [\n  // O7C Hub permissions (admin/coach)\n  { resource: 'dashboard', action: 'view', roles: ['admin', 'coach'] },\n  { resource: 'roster', action: 'view', roles: ['admin', 'coach'] },\n  { resource: 'roster', action: 'manage', roles: ['admin', 'coach'] },\n  { resource: 'recruiting', action: 'view', roles: ['admin', 'coach'] },\n  { resource: 'recruiting', action: 'manage', roles: ['admin', 'coach'] },\n  { resource: 'users', action: 'view', roles: ['admin'] },\n  { resource: 'users', action: 'manage', roles: ['admin'] },\n\n  // Player Portal permissions (player/parent)\n  { resource: 'profile', action: 'view', roles: ['player', 'parent'] },\n  { resource: 'profile', action: 'manage', roles: ['player', 'parent'] },\n  { resource: 'recruiting', action: 'view', roles: ['player', 'parent'] },\n  { resource: 'calendar', action: 'view', roles: ['player', 'parent'] },\n  { resource: 'messages', action: 'view', roles: ['player', 'parent'] },\n  { resource: 'messages', action: 'manage', roles: ['player', 'parent'] },\n  { resource: 'players', action: 'view', roles: ['parent'] },\n  { resource: 'players', action: 'manage', roles: ['parent'] },\n];\n\nexport const hasPermission = (\n  userRole: UserRole | undefined,\n  resource: string,\n  action: string\n): boolean => {\n  if (!userRole) return false;\n\n  return PERMISSIONS.some(\n    permission =>\n      permission.resource === resource &&\n      permission.action === action &&\n      permission.roles.includes(userRole)\n  );\n};\n\nexport const hasAnyPermission = (\n  userRole: UserRole | undefined,\n  permissions: Array<{ resource: string; action: string }>\n): boolean => {\n  if (!userRole) return false;\n\n  return permissions.some(({ resource, action }) =>\n    hasPermission(userRole, resource, action)\n  );\n};\n\nexport const hasAllPermissions = (\n  userRole: UserRole | undefined,\n  permissions: Array<{ resource: string; action: string }>\n): boolean => {\n  if (!userRole) return false;\n\n  return permissions.every(({ resource, action }) =>\n    hasPermission(userRole, resource, action)\n  );\n};\n\nexport const getAllowedRoles = (resource: string, action: string): UserRole[] => {\n  return PERMISSIONS\n    .filter(permission => permission.resource === resource && permission.action === action)\n    .flatMap(permission => permission.roles);\n};", "// Security utilities for cross-app access prevention\n\nimport { getCurrentApp, hasAccessToApp } from './routing';\nimport type { UserRole } from './routing';\n\nexport interface SecurityCheckResult {\n  allowed: boolean;\n  reason?: string;\n  redirectUrl?: string;\n}\n\n/**\n * Check if a user has access to the current app based on their role\n */\nexport const checkAppAccess = (userRole: UserRole): SecurityCheckResult => {\n  const currentApp = getCurrentApp();\n  const hasAccess = hasAccessToApp(userRole, currentApp);\n\n  if (!hasAccess) {\n    return {\n      allowed: false,\n      reason: `User with role '${userRole}' does not have access to '${currentApp}' app`,\n      redirectUrl: getRedirectUrlForRole(userRole)\n    };\n  }\n\n  return { allowed: true };\n};\n\n/**\n * Get the appropriate redirect URL for a user role\n */\nexport const getRedirectUrlForRole = (userRole: UserRole): string => {\n  if (['admin', 'coach'].includes(userRole)) {\n    return process.env.NODE_ENV === 'production'\n      ? 'https://o7c-hub.vercel.app'\n      : 'http://localhost:3000';\n  }\n  if (['player', 'parent'].includes(userRole)) {\n    return process.env.NODE_ENV === 'production'\n      ? 'https://player-portal.vercel.app'\n      : 'http://localhost:3001';\n  }\n  return process.env.NODE_ENV === 'production'\n    ? 'https://player-portal.vercel.app'\n    : 'http://localhost:3001';\n};\n\n/**\n * Validate API access based on user role and endpoint requirements\n */\nexport const validateApiAccess = (\n  userRole: UserRole | undefined,\n  requiredRoles: UserRole[],\n  endpoint: string\n): SecurityCheckResult => {\n  if (!userRole) {\n    return {\n      allowed: false,\n      reason: 'Authentication required'\n    };\n  }\n\n  const hasAccess = requiredRoles.includes(userRole);\n\n  if (!hasAccess) {\n    return {\n      allowed: false,\n      reason: `User role '${userRole}' does not have access to endpoint '${endpoint}'. Required roles: ${requiredRoles.join(', ')}`\n    };\n  }\n\n  return { allowed: true };\n};\n\n/**\n * Check if a user can perform a specific action on a resource\n */\nexport const canPerformAction = (\n  userRole: UserRole | undefined,\n  resource: string,\n  action: string,\n  context?: Record<string, any>\n): SecurityCheckResult => {\n  if (!userRole) {\n    return {\n      allowed: false,\n      reason: 'Authentication required'\n    };\n  }\n\n  // Define role-based permissions\n  const permissions: Record<string, Record<string, UserRole[]>> = {\n    'user-management': {\n      'view': ['admin'],\n      'create': ['admin'],\n      'update': ['admin'],\n      'delete': ['admin']\n    },\n    'roster': {\n      'view': ['admin', 'coach'],\n      'manage': ['admin', 'coach']\n    },\n    'recruiting': {\n      'view': ['admin', 'coach', 'player', 'parent'],\n      'manage': ['admin', 'coach']\n    },\n    'profile': {\n      'view': ['admin', 'coach', 'player', 'parent'],\n      'manage': ['admin', 'coach', 'player', 'parent']\n    },\n    'calendar': {\n      'view': ['admin', 'coach', 'player', 'parent'],\n      'manage': ['admin', 'coach']\n    },\n    'messages': {\n      'view': ['admin', 'coach', 'player', 'parent'],\n      'manage': ['admin', 'coach', 'player', 'parent']\n    },\n    'players': {\n      'view': ['admin', 'coach', 'parent'],\n      'manage': ['admin', 'coach', 'parent']\n    }\n  };\n\n  const resourcePermissions = permissions[resource];\n  if (!resourcePermissions) {\n    return {\n      allowed: false,\n      reason: `Unknown resource '${resource}'`\n    };\n  }\n\n  const actionRoles = resourcePermissions[action];\n  if (!actionRoles) {\n    return {\n      allowed: false,\n      reason: `Unknown action '${action}' for resource '${resource}'`\n    };\n  }\n\n  const hasPermission = actionRoles.includes(userRole);\n\n  if (!hasPermission) {\n    return {\n      allowed: false,\n      reason: `User role '${userRole}' does not have permission to '${action}' resource '${resource}'`\n    };\n  }\n\n  return { allowed: true };\n};\n\n/**\n * Sanitize user input to prevent XSS attacks\n */\nexport const sanitizeInput = (input: string): string => {\n  return input\n    .replace(/</g, '<')\n    .replace(/>/g, '>')\n    .replace(/\"/g, '\"')\n    .replace(/'/g, '&#x27;')\n    .replace(/\\//g, '&#x2F;');\n};\n\n/**\n * Validate email format\n */\nexport const isValidEmail = (email: string): boolean => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\n/**\n * Rate limiting helper (basic implementation)\n */\nexport class RateLimiter {\n  private attempts: Map<string, { count: number; resetTime: number }> = new Map();\n  private maxAttempts: number;\n  private windowMs: number;\n\n  constructor(maxAttempts: number = 5, windowMs: number = 15 * 60 * 1000) { // 15 minutes\n    this.maxAttempts = maxAttempts;\n    this.windowMs = windowMs;\n  }\n\n  isAllowed(identifier: string): boolean {\n    const now = Date.now();\n    const record = this.attempts.get(identifier);\n\n    if (!record || now > record.resetTime) {\n      // Reset or create new record\n      this.attempts.set(identifier, { count: 1, resetTime: now + this.windowMs });\n      return true;\n    }\n\n    if (record.count >= this.maxAttempts) {\n      return false;\n    }\n\n    record.count++;\n    return true;\n  }\n\n  reset(identifier: string): void {\n    this.attempts.delete(identifier);\n  }\n}", "// Simple className utility without external dependencies\nexport function cn(...inputs: (string | undefined | null | boolean)[]) {\n  return inputs.filter(Boolean).join(' ')\n}", "import * as React from \"react\"\nimport { cn } from \"../../utils\"\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }", "import React from 'react';\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg';\n  message?: string;\n  className?: string;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  size = 'md',\n  message = 'Loading...',\n  className = ''\n}) => {\n  const sizeClasses = {\n    sm: 'h-4 w-4',\n    md: 'h-8 w-8',\n    lg: 'h-12 w-12'\n  };\n\n  return (\n    <div className={`flex flex-col items-center justify-center p-4 ${className}`}>\n      <div\n        className={`animate-spin rounded-full border-b-2 border-blue-600 ${sizeClasses[size]}`}\n        role=\"status\"\n        aria-label=\"Loading\"\n      />\n      {message && (\n        <p className=\"mt-2 text-sm text-gray-600\">{message}</p>\n      )}\n    </div>\n  );\n};\n\nexport default LoadingSpinner;", "import React from 'react';\nimport { ShieldX, ArrowLeft } from 'lucide-react';\n\ninterface AccessDeniedProps {\n  title?: string;\n  message?: string;\n  showBackButton?: boolean;\n  onBack?: () => void;\n  className?: string;\n}\n\nconst AccessDenied: React.FC<AccessDeniedProps> = ({\n  title = 'Access Denied',\n  message = 'You don\\'t have permission to access this page.',\n  showBackButton = true,\n  onBack,\n  className = ''\n}) => {\n  const handleBack = () => {\n    if (onBack) {\n      onBack();\n    } else {\n      window.history.back();\n    }\n  };\n\n  return (\n    <div className={`min-h-screen flex items-center justify-center bg-gray-50 ${className}`}>\n      <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-8 text-center\">\n        <div className=\"flex justify-center mb-6\">\n          <ShieldX className=\"h-16 w-16 text-red-500\" />\n        </div>\n\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">{title}</h1>\n\n        <p className=\"text-gray-600 mb-8\">{message}</p>\n\n        {showBackButton && (\n          <button\n            onClick={handleBack}\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n          >\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Go Back\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AccessDenied;", "import { useAuth } from '../contexts/AuthContext';\nimport { Navigate } from 'react-router-dom';\nimport { hasPermission, hasAnyPermission } from '../utils/permissions';\nimport { shouldRedirectUser, getRedirectUrl } from '../utils/routing';\nimport LoadingSpinner from './LoadingSpinner';\nimport AccessDenied from './AccessDenied';\nimport type { UserRole } from '../utils/routing';\nimport type { AuthContextType } from '../types/auth';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  allowedRoles?: UserRole[];\n  requiredPermissions?: Array<{ resource: string; action: string }>;\n  requireAllPermissions?: boolean;\n  fallbackRoute?: string;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\n  children,\n  allowedRoles = [],\n  requiredPermissions = [],\n  requireAllPermissions = false,\n  fallbackRoute\n}) => {\n  const { user, userData, loading, userDataLoading } = useAuth() as AuthContextType;\n\n  // Show loading spinner while checking authentication\n  if (loading || userDataLoading) {\n    return <LoadingSpinner size=\"lg\" message=\"Checking permissions...\" />;\n  }\n\n  // Redirect to login if not authenticated\n  if (!user) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  // Check if user has userData and is authorized\n  if (!userData) {\n    return (\n      <AccessDenied\n        title=\"Account Setup Required\"\n        message=\"Your account is being configured. Please contact support if this persists.\"\n        showBackButton={false}\n      />\n    );\n  }\n\n  // Check role-based app access and redirect if needed\n  if (shouldRedirectUser(userData.role)) {\n    const redirectUrl = getRedirectUrl(userData.role);\n    window.location.href = redirectUrl;\n    return null;\n  }\n\n  // Check specific role requirements\n  if (allowedRoles.length > 0 && !allowedRoles.includes(userData.role)) {\n    if (fallbackRoute) {\n      return <Navigate to={fallbackRoute} replace />;\n    }\n    return <AccessDenied />;\n  }\n\n  // Check permission requirements\n  if (requiredPermissions.length > 0) {\n    const hasRequiredPermissions = requireAllPermissions\n      ? hasAnyPermission(userData.role, requiredPermissions)\n      : hasAnyPermission(userData.role, requiredPermissions);\n\n    if (!hasRequiredPermissions) {\n      if (fallbackRoute) {\n        return <Navigate to={fallbackRoute} replace />;\n      }\n      return (\n        <AccessDenied\n          message=\"You don't have the required permissions to access this page.\"\n        />\n      );\n    }\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;", "import React from 'react';\nimport { AlertTriangle, X } from 'lucide-react';\n\ninterface ErrorMessageProps {\n  title?: string;\n  message: string;\n  onClose?: () => void;\n  className?: string;\n}\n\nconst ErrorMessage: React.FC<ErrorMessageProps> = ({\n  title = 'Error',\n  message,\n  onClose,\n  className = ''\n}) => {\n  return (\n    <div className={`bg-red-50 border border-red-200 rounded-md p-4 ${className}`}>\n      <div className=\"flex\">\n        <div className=\"flex-shrink-0\">\n          <AlertTriangle className=\"h-5 w-5 text-red-400\" />\n        </div>\n        <div className=\"ml-3 flex-1\">\n          <h3 className=\"text-sm font-medium text-red-800\">{title}</h3>\n          <p className=\"mt-1 text-sm text-red-700\">{message}</p>\n        </div>\n        {onClose && (\n          <div className=\"ml-auto pl-3\">\n            <button\n              onClick={onClose}\n              className=\"inline-flex rounded-md bg-red-50 p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-red-600 focus:ring-offset-2\"\n              title=\"Close error message\"\n            >\n              <X className=\"h-5 w-5\" />\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorMessage;", "import React, { useState, useRef, useEffect } from 'react';\nimport { Send, Paperclip, MoreVertical, Reply, Edit2, Trash2, User, Users } from 'lucide-react';\nimport { ChatService } from '../services/chatService';\nimport { useChat, usePresence } from '../hooks';\nimport type { ChatMessage, ChatRoom } from '../types/chat';\n\ninterface ChatSystemProps {\n  chatService: ChatService;\n  userId: string;\n  userName: string;\n  userRole: string;\n  roomId?: string;\n  className?: string;\n}\n\nexport const ChatSystem: React.FC<ChatSystemProps> = ({\n  chatService,\n  userId,\n  userName,\n  userRole,\n  roomId,\n  className = '',\n}) => {\n  const [messageInput, setMessageInput] = useState('');\n  const [editingMessage, setEditingMessage] = useState<string | null>(null);\n  const [replyingTo, setReplyingTo] = useState<string | null>(null);\n  const [showRoomSelector, setShowRoomSelector] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const chat = useChat(chatService, userId, userName, userRole);\n  const presence = usePresence(chatService);\n\n  // Auto-join room if provided\n  useEffect(() => {\n    if (roomId && !chat.currentRoom) {\n      chat.joinRoom(roomId);\n    }\n  }, [roomId, chat]);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [chat.messages]);\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!messageInput.trim()) return;\n\n    try {\n      if (editingMessage) {\n        await chat.editMessage(editingMessage, messageInput);\n        setEditingMessage(null);\n      } else {\n        await chat.sendMessage(messageInput, 'text', replyingTo || undefined);\n        setReplyingTo(null);\n      }\n      setMessageInput('');\n    } catch (error) {\n      console.error('Failed to send message:', error);\n    }\n  };\n\n  const handleFileUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    try {\n      const fileUrl = await chatService.uploadFile(chat.currentRoom!.id, file, userId);\n      await chat.sendMessage(file.name, file.type.startsWith('image/') ? 'image' : 'file');\n    } catch (error) {\n      console.error('Failed to upload file:', error);\n    }\n  };\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const formatDate = (date: Date) => {\n    const today = new Date();\n    const messageDate = new Date(date);\n\n    if (messageDate.toDateString() === today.toDateString()) {\n      return 'Today';\n    }\n\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n\n    if (messageDate.toDateString() === yesterday.toDateString()) {\n      return 'Yesterday';\n    }\n\n    return messageDate.toLocaleDateString();\n  };\n\n  const renderMessage = (message: ChatMessage, index: number) => {\n    const isOwnMessage = message.senderId === userId;\n    const prevMessage = index > 0 ? chat.messages[index - 1] : null;\n    const showDateSeparator = !prevMessage ||\n      formatDate(message.timestamp) !== formatDate(prevMessage.timestamp);\n\n    return (\n      <div key={message.id}>\n        {showDateSeparator && (\n          <div className=\"flex items-center justify-center my-4\">\n            <div className=\"bg-gray-200 text-gray-600 px-3 py-1 rounded-full text-sm\">\n              {formatDate(message.timestamp)}\n            </div>\n          </div>\n        )}\n\n        <div className={`flex mb-2 ${isOwnMessage ? 'justify-end' : 'justify-start'}`}>\n          <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n            isOwnMessage\n              ? 'bg-blue-500 text-white'\n              : 'bg-gray-200 text-gray-900'\n          }`}>\n            {!isOwnMessage && (\n              <div className=\"text-xs font-semibold mb-1\">{message.senderName}</div>\n            )}\n\n            {message.replyTo && (\n              <div className=\"text-xs opacity-75 mb-2 border-l-2 border-current pl-2\">\n                Replying to: {chat.messages.find(m => m.id === message.replyTo)?.content.slice(0, 50)}...\n              </div>\n            )}\n\n            {message.type === 'image' && message.metadata?.imageUrl && (\n              <img\n                src={message.metadata.imageUrl}\n                alt={message.metadata.fileName}\n                className=\"max-w-full rounded mb-2\"\n              />\n            )}\n\n            {message.type === 'file' && message.metadata?.fileUrl && (\n              <a\n                href={message.metadata.fileUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue-300 underline\"\n              >\n                📎 {message.metadata.fileName}\n              </a>\n            )}\n\n            <div className=\"text-sm\">{message.content}</div>\n\n            <div className={`text-xs mt-1 ${isOwnMessage ? 'text-blue-200' : 'text-gray-500'}`}>\n              {formatTime(message.timestamp)}\n              {message.edited && ' (edited)'}\n            </div>\n          </div>\n\n          {isOwnMessage && chat.permissions.canEditMessages && (\n            <div className=\"ml-2\">\n              <button\n                onClick={() => {\n                  setEditingMessage(message.id);\n                  setMessageInput(message.content);\n                }}\n                className=\"text-gray-400 hover:text-gray-600 p-1\"\n              >\n                <Edit2 size={14} />\n              </button>\n              {chat.permissions.canDeleteMessages && (\n                <button\n                  onClick={() => chat.deleteMessage(message.id)}\n                  className=\"text-gray-400 hover:text-red-600 p-1\"\n                >\n                  <Trash2 size={14} />\n                </button>\n              )}\n            </div>\n          )}\n\n          {!isOwnMessage && (\n            <div className=\"ml-2\">\n              <button\n                onClick={() => setReplyingTo(message.id)}\n                className=\"text-gray-400 hover:text-gray-600 p-1\"\n              >\n                <Reply size={14} />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  if (!chat.currentRoom) {\n    return (\n      <div className={`flex items-center justify-center h-full ${className}`}>\n        <div className=\"text-center\">\n          <Users className=\"mx-auto mb-4 text-gray-400\" size={48} />\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">No Chat Room Selected</h3>\n          <p className=\"text-gray-600\">Select a room to start chatting</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`flex flex-col h-full bg-white ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b bg-gray-50\">\n        <div className=\"flex items-center\">\n          <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center mr-3\">\n            <Users size={16} className=\"text-white\" />\n          </div>\n          <div>\n            <h3 className=\"font-semibold text-gray-900\">{chat.currentRoom.name}</h3>\n            <p className=\"text-sm text-gray-600\">\n              {chat.participants.filter(p => p.isOnline).length} online\n            </p>\n          </div>\n        </div>\n        <button\n          onClick={() => setShowRoomSelector(!showRoomSelector)}\n          className=\"text-gray-400 hover:text-gray-600\"\n        >\n          <MoreVertical size={20} />\n        </button>\n      </div>\n\n      {/* Messages */}\n      <div className=\"flex-1 overflow-y-auto p-4\">\n        {chat.messages.map((message, index) => renderMessage(message, index))}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Reply indicator */}\n      {replyingTo && (\n        <div className=\"px-4 py-2 bg-gray-100 border-t flex items-center justify-between\">\n          <div className=\"flex items-center\">\n            <Reply size={16} className=\"text-gray-500 mr-2\" />\n            <span className=\"text-sm text-gray-600\">\n              Replying to: {chat.messages.find(m => m.id === replyingTo)?.content.slice(0, 50)}...\n            </span>\n          </div>\n          <button\n            onClick={() => setReplyingTo(null)}\n            className=\"text-gray-400 hover:text-gray-600\"\n          >\n            ✕\n          </button>\n        </div>\n      )}\n\n      {/* Message Input */}\n      <form onSubmit={handleSendMessage} className=\"p-4 border-t bg-gray-50\">\n        <div className=\"flex items-center space-x-2\">\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            onChange={handleFileUpload}\n            className=\"hidden\"\n            accept=\"image/*,.pdf,.doc,.docx,.txt\"\n          />\n          <button\n            type=\"button\"\n            onClick={() => fileInputRef.current?.click()}\n            className=\"text-gray-400 hover:text-gray-600 p-2\"\n            disabled={!chat.permissions.canSendMessages}\n          >\n            <Paperclip size={20} />\n          </button>\n\n          <input\n            type=\"text\"\n            value={messageInput}\n            onChange={(e) => setMessageInput(e.target.value)}\n            placeholder={editingMessage ? \"Edit message...\" : \"Type a message...\"}\n            className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={!chat.permissions.canSendMessages}\n          />\n\n          <button\n            type=\"submit\"\n            disabled={!messageInput.trim() || !chat.permissions.canSendMessages}\n            className=\"bg-blue-500 text-white p-2 rounded-lg hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed\"\n          >\n            <Send size={20} />\n          </button>\n        </div>\n      </form>\n\n      {/* Error Message */}\n      {chat.error && (\n        <div className=\"px-4 py-2 bg-red-100 border-t border-red-200\">\n          <p className=\"text-red-700 text-sm\">{chat.error}</p>\n        </div>\n      )}\n    </div>\n  );\n};", "import { useState, useEffect, useCallback, useRef } from 'react';\nimport { ChatService } from '../services/chatService';\nimport type {\n  ChatMessage,\n  ChatRoom,\n  ChatParticipant,\n  UserPresence,\n  ChatPermissions,\n  ChatContextType,\n} from '../types/chat';\n\nexport const useChat = (chatService: ChatService, userId: string, userName: string, userRole: string) => {\n  const [currentRoom, setCurrentRoom] = useState<ChatRoom | null>(null);\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [participants, setParticipants] = useState<ChatParticipant[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [permissions, setPermissions] = useState<ChatPermissions>({\n    canSendMessages: false,\n    canEditMessages: false,\n    canDeleteMessages: false,\n    canAddParticipants: false,\n    canRemoveParticipants: false,\n    canViewHistory: false,\n  });\n\n  const unsubscribeRefs = useRef<(() => void)[]>([]);\n\n  // Send message\n  const sendMessage = useCallback(async (\n    content: string,\n    type: ChatMessage['type'] = 'text',\n    replyTo?: string\n  ) => {\n    if (!currentRoom || !permissions.canSendMessages) {\n      throw new Error('Cannot send message');\n    }\n\n    try {\n      setError(null);\n      await chatService.sendMessage(currentRoom.id, userId, userName, content, type, replyTo);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to send message');\n      throw err;\n    }\n  }, [currentRoom, permissions.canSendMessages, userId, userName, chatService]);\n\n  // Edit message\n  const editMessage = useCallback(async (messageId: string, content: string) => {\n    if (!permissions.canEditMessages) {\n      throw new Error('Cannot edit message');\n    }\n\n    try {\n      setError(null);\n      await chatService.editMessage(messageId, content);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to edit message');\n      throw err;\n    }\n  }, [permissions.canEditMessages, chatService]);\n\n  // Delete message\n  const deleteMessage = useCallback(async (messageId: string) => {\n    if (!permissions.canDeleteMessages) {\n      throw new Error('Cannot delete message');\n    }\n\n    try {\n      setError(null);\n      await chatService.deleteMessage(messageId);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to delete message');\n      throw err;\n    }\n  }, [permissions.canDeleteMessages, chatService]);\n\n  // Join room\n  const joinRoom = useCallback(async (roomId: string) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // Leave current room if any\n      if (currentRoom) {\n        await chatService.leaveRoom(currentRoom.id, userId);\n      }\n\n      // Join new room\n      await chatService.joinRoom(roomId, userId, userName, userRole);\n\n      // Update permissions\n      const roomPermissions = await chatService.getPermissions(userId, roomId);\n      setPermissions(roomPermissions);\n\n      setIsLoading(false);\n    } catch (err) {\n      setIsLoading(false);\n      setError(err instanceof Error ? err.message : 'Failed to join room');\n      throw err;\n    }\n  }, [currentRoom, userId, userName, userRole, chatService]);\n\n  // Leave room\n  const leaveRoom = useCallback(async () => {\n    if (!currentRoom) return;\n\n    try {\n      await chatService.leaveRoom(currentRoom.id, userId);\n      setCurrentRoom(null);\n      setMessages([]);\n      setParticipants([]);\n      setPermissions({\n        canSendMessages: false,\n        canEditMessages: false,\n        canDeleteMessages: false,\n        canAddParticipants: false,\n        canRemoveParticipants: false,\n        canViewHistory: false,\n      });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to leave room');\n    }\n  }, [currentRoom, userId, chatService]);\n\n  // Load more messages\n  const loadMoreMessages = useCallback(async () => {\n    // Implementation for pagination would go here\n    // For now, this is a placeholder\n  }, []);\n\n  // Mark message as read\n  const markAsRead = useCallback(async (messageId: string) => {\n    // Implementation for marking messages as read would go here\n    // This could update a user's read status in the database\n  }, []);\n\n  // Set up subscriptions when room changes\n  useEffect(() => {\n    if (!currentRoom) return;\n\n    // Clean up previous subscriptions\n    unsubscribeRefs.current.forEach(unsubscribe => unsubscribe());\n    unsubscribeRefs.current = [];\n\n    // Subscribe to messages\n    const unsubscribeMessages = chatService.subscribeToRoom(currentRoom.id, (newMessages) => {\n      setMessages(newMessages);\n    });\n    unsubscribeRefs.current.push(unsubscribeMessages);\n\n    // Subscribe to room updates\n    const unsubscribeRoom = chatService.subscribeToRoomUpdates(currentRoom.id, (room) => {\n      setCurrentRoom(room);\n      setParticipants(room.participants);\n    });\n    unsubscribeRefs.current.push(unsubscribeRoom);\n\n    // Cleanup on unmount or room change\n    return () => {\n      unsubscribeRefs.current.forEach(unsubscribe => unsubscribe());\n      unsubscribeRefs.current = [];\n    };\n  }, [currentRoom, chatService]);\n\n  // Leave room on unmount\n  useEffect(() => {\n    return () => {\n      if (currentRoom) {\n        chatService.leaveRoom(currentRoom.id, userId).catch(console.error);\n      }\n      unsubscribeRefs.current.forEach(unsubscribe => unsubscribe());\n    };\n  }, [currentRoom, userId, chatService]);\n\n  const contextValue: ChatContextType = {\n    currentRoom,\n    messages,\n    participants,\n    isLoading,\n    error,\n    sendMessage,\n    editMessage,\n    deleteMessage,\n    joinRoom,\n    leaveRoom,\n    loadMoreMessages,\n    markAsRead,\n    permissions,\n  };\n\n  return contextValue;\n};", "import { useState, useEffect, useCallback } from 'react';\nimport { ChatService } from '../services/chatService';\nimport type { UserPresence } from '../types/chat';\n\nexport const usePresence = (chatService: ChatService) => {\n  const [presences, setPresences] = useState<UserPresence[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = chatService.subscribeToPresence((newPresences) => {\n      setPresences(newPresences);\n      setIsLoading(false);\n    });\n\n    return unsubscribe;\n  }, [chatService]);\n\n  const getPresenceByUserId = useCallback((userId: string): UserPresence | undefined => {\n    return presences.find(p => p.userId === userId);\n  }, [presences]);\n\n  const getOnlineUsers = useCallback((): UserPresence[] => {\n    return presences.filter(p => p.isOnline);\n  }, [presences]);\n\n  const getUsersInRoom = useCallback((roomId: string): UserPresence[] => {\n    return presences.filter(p => p.isOnline && p.currentRoom === roomId);\n  }, [presences]);\n\n  return {\n    presences,\n    isLoading,\n    getPresenceByUserId,\n    getOnlineUsers,\n    getUsersInRoom,\n  };\n};", "import { useState, useEffect, useCallback } from 'react';\n\ninterface QueuedMessage {\n  id: string;\n  roomId: string;\n  content: string;\n  type: 'text' | 'image' | 'file';\n  replyTo?: string;\n  timestamp: number;\n  retryCount: number;\n}\n\nexport const useOfflineQueue = () => {\n  const [queue, setQueue] = useState<QueuedMessage[]>([]);\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n\n  // Load queue from localStorage on mount\n  useEffect(() => {\n    const savedQueue = localStorage.getItem('chat_offline_queue');\n    if (savedQueue) {\n      try {\n        setQueue(JSON.parse(savedQueue));\n      } catch (error) {\n        console.error('Failed to parse offline queue:', error);\n      }\n    }\n  }, []);\n\n  // Save queue to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('chat_offline_queue', JSON.stringify(queue));\n  }, [queue]);\n\n  // Monitor online status\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  // Add message to queue\n  const addToQueue = useCallback((\n    roomId: string,\n    content: string,\n    type: QueuedMessage['type'] = 'text',\n    replyTo?: string\n  ) => {\n    const queuedMessage: QueuedMessage = {\n      id: `offline_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      roomId,\n      content,\n      type,\n      replyTo,\n      timestamp: Date.now(),\n      retryCount: 0,\n    };\n\n    setQueue(prev => [...prev, queuedMessage]);\n    return queuedMessage.id;\n  }, []);\n\n  // Remove message from queue\n  const removeFromQueue = useCallback((messageId: string) => {\n    setQueue(prev => prev.filter(msg => msg.id !== messageId));\n  }, []);\n\n  // Retry sending a message\n  const retryMessage = useCallback((messageId: string) => {\n    setQueue(prev => prev.map(msg =>\n      msg.id === messageId\n        ? { ...msg, retryCount: msg.retryCount + 1 }\n        : msg\n    ));\n  }, []);\n\n  // Clear old messages (older than 24 hours)\n  const clearOldMessages = useCallback(() => {\n    const oneDayAgo = Date.now() - (24 * 60 * 60 * 1000);\n    setQueue(prev => prev.filter(msg => msg.timestamp > oneDayAgo));\n  }, []);\n\n  // Get messages for a specific room\n  const getQueuedMessagesForRoom = useCallback((roomId: string) => {\n    return queue.filter(msg => msg.roomId === roomId);\n  }, [queue]);\n\n  // Get all queued messages\n  const getAllQueuedMessages = useCallback(() => {\n    return queue;\n  }, [queue]);\n\n  // Clear entire queue\n  const clearQueue = useCallback(() => {\n    setQueue([]);\n  }, []);\n\n  // Get queue statistics\n  const getQueueStats = useCallback(() => {\n    return {\n      total: queue.length,\n      byRoom: queue.reduce((acc, msg) => {\n        acc[msg.roomId] = (acc[msg.roomId] || 0) + 1;\n        return acc;\n      }, {} as Record<string, number>),\n      failedRetries: queue.filter(msg => msg.retryCount >= 3).length,\n    };\n  }, [queue]);\n\n  return {\n    queue,\n    isOnline,\n    addToQueue,\n    removeFromQueue,\n    retryMessage,\n    clearOldMessages,\n    getQueuedMessagesForRoom,\n    getAllQueuedMessages,\n    clearQueue,\n    getQueueStats,\n  };\n};", "import { auth } from '../lib/firebase';\n\n// Firebase auth operations\nexport const me = async () => {\n  const user = auth.currentUser;\n  if (user) {\n    return {\n      id: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      // Add other user properties as needed\n    };\n  }\n  return null;\n};\n\nexport const isAuthenticated = () => {\n  return !!auth.currentUser;\n};", "// This client is deprecated. Use Firebase Firestore operations instead.\n// Keeping for backward compatibility but pointing to a placeholder URL.\nconst BASE_URL = 'https://deprecated-api.example.com';\nconst API_KEY = 'deprecated';\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY = 1000; // 1 second\n\nclass ApiError extends Error {\n  constructor(message, status, data) {\n    super(message);\n    this.status = status;\n    this.data = data;\n    this.name = 'ApiError';\n  }\n}\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nconst shouldRetry = (error, attempt) => {\n  if (attempt >= MAX_RETRIES) return false;\n\n  // Retry on network errors or 5xx status codes\n  if (!error.status) return true; // Network error\n  return error.status >= 500;\n};\n\nconst makeRequest = async (url, options = {}, attempt = 1) => {\n  try {\n    const response = await fetch(url, {\n      ...options,\n      headers: {\n        'api_key': API_KEY,\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new ApiError(\n        `HTTP ${response.status}: ${response.statusText}`,\n        response.status,\n        errorData\n      );\n    }\n\n    return await response.json();\n  } catch (error) {\n    if (shouldRetry(error, attempt)) {\n      await delay(RETRY_DELAY * attempt);\n      return makeRequest(url, options, attempt + 1);\n    }\n    throw error;\n  }\n};\n\nexport const apiClient = {\n  get: (endpoint, params = {}) => {\n    const url = new URL(`${BASE_URL}${endpoint}`);\n    Object.keys(params).forEach(key => {\n      if (params[key] !== undefined && params[key] !== null) {\n        url.searchParams.append(key, params[key]);\n      }\n    });\n    return makeRequest(url.toString());\n  },\n\n  put: (endpoint, data) => {\n    return makeRequest(`${BASE_URL}${endpoint}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  post: (endpoint, data) => {\n    return makeRequest(`${BASE_URL}${endpoint}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n\n  delete: (endpoint) => {\n    return makeRequest(`${BASE_URL}${endpoint}`, {\n      method: 'DELETE',\n    });\n  },\n};\n\nexport { ApiError };", "import { firebaseClient } from '../base44Client.js';\n\nexport const list = (options = {}) => {\n  const { sort = '-stars', limit = null } = options;\n  return firebaseClient.entities.Player.list(sort, limit);\n};\n\nexport const fetchPlayers = () => {\n  return list();\n};\n\nexport const filter = (filters = {}, limit = null) => firebaseClient.entities.Player.filter(filters, limit);\n\nexport const create = (data) => firebaseClient.entities.Player.create(data);\n\nexport const update = (id, data) => firebaseClient.entities.Player.update(id, data);\n\nexport const remove = (id) => firebaseClient.entities.Player.delete(id);", "import { firebaseClient } from './base44Client';\nimport { list, filter, create, update, remove, fetchPlayers } from './entities/Player.js';\n\n// Helper function to create entity operations\nconst createEntityOperations = (entityName) => {\n  return {\n    list: (orderBy = '-created_date', limit = null) => firebaseClient.entities[entityName]?.list(orderBy, limit),\n    filter: (filters = {}, limit = null) => firebaseClient.entities[entityName]?.filter(filters, limit),\n    get: (id) => firebaseClient.entities[entityName]?.get(id),\n    create: (data) => firebaseClient.entities[entityName]?.create(data),\n    update: (id, data) => firebaseClient.entities[entityName]?.update(id, data),\n    delete: (id) => firebaseClient.entities[entityName]?.delete(id),\n    bulkCreate: (items) => firebaseClient.entities[entityName]?.bulkCreate(items)\n  };\n};\n\n// Export all entities\nexport const Player = {\n  ...createEntityOperations('Player'),\n  list,\n  filter,\n  create,\n  update,\n  delete: remove,\n  fetchPlayers\n};\nexport const School = createEntityOperations('School');\nexport const Contact = createEntityOperations('Contact');\nexport const TeamHistory = createEntityOperations('TeamHistory');\nexport const Tournament = createEntityOperations('Tournament');\nexport const TournamentParticipation = createEntityOperations('TournamentParticipation');\nexport const PlayerImage = createEntityOperations('PlayerImage');\nexport const Team = createEntityOperations('Team');\nexport const Coach = createEntityOperations('Coach');\nexport const CoachAssignment = createEntityOperations('CoachAssignment');\nexport const ParentPlayerAssignment = createEntityOperations('ParentPlayerAssignment');\nexport const Payment = createEntityOperations('Payment');\nexport const AdditionalFee = createEntityOperations('AdditionalFee');\nexport const PaymentMethod = createEntityOperations('PaymentMethod');\nexport const TeamFee = createEntityOperations('TeamFee');\nexport const RecruitingInterest = createEntityOperations('RecruitingInterest');\n\n// Firebase auth operations\nexport const User = {\n  me: async () => {\n    // Return current Firebase user info\n    const { auth } = await import('../lib/firebase');\n    const user = auth.currentUser;\n    if (user) {\n      return {\n        id: user.uid,\n        email: user.email,\n        displayName: user.displayName,\n        // Add other user properties as needed\n      };\n    }\n    return null;\n  },\n  isAuthenticated: async () => {\n    // Check if user is authenticated\n    const { auth } = await import('../lib/firebase');\n    return !!auth.currentUser;\n  }\n};", "/**\n * Token Validation Utility\n * Provides comprehensive token validation and security functions\n */\n\n/**\n * Token validation patterns for different services\n */\nconst TOKEN_PATTERNS = {\n  huggingface: {\n    pattern: /^hf_[a-zA-Z0-9]{34}$/,\n    description: 'HuggingFace API token (starts with \"hf_\" followed by 34 alphanumeric characters)',\n    example: 'hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n  },\n  base44: {\n    pattern: /^[a-zA-Z0-9]{32,}$/,\n    description: 'Base44 API key (32+ alphanumeric characters)',\n    example: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n  },\n  brevo: {\n    pattern: /^xkeysib-[a-f0-9]{64}-[a-zA-Z0-9]{16}$/,\n    description: 'Brevo API key (starts with \"xkeysib-\" followed by hex and alphanumeric)',\n    example: 'xkeysib-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx'\n  }\n};\n\n/**\n * Validates token format for a specific service\n * @param {string} token - The token to validate\n * @param {string} service - The service type ('huggingface', 'base44', 'brevo')\n * @returns {Object} Validation result with success, error details, and suggestions\n */\nexport function validateTokenFormat(token, service) {\n  // Input validation\n  if (!token) {\n    return {\n      valid: false,\n      error: 'TOKEN_MISSING',\n      message: 'Token is required but not provided',\n      suggestions: [\n        'Ensure the token is set in your environment variables',\n        'Check for typos in the environment variable name',\n        'Verify the token is not empty or undefined'\n      ]\n    };\n  }\n\n  if (typeof token !== 'string') {\n    return {\n      valid: false,\n      error: 'TOKEN_INVALID_TYPE',\n      message: `Token must be a string, received ${typeof token}`,\n      suggestions: [\n        'Ensure the token is stored as a string value',\n        'Check for accidental type conversion in your code'\n      ]\n    };\n  }\n\n  // Trim whitespace and check for empty string\n  const trimmedToken = token.trim();\n  if (!trimmedToken) {\n    return {\n      valid: false,\n      error: 'TOKEN_EMPTY',\n      message: 'Token is empty or contains only whitespace',\n      suggestions: [\n        'Remove any leading/trailing spaces from the token',\n        'Ensure the token value is not just whitespace',\n        'Check the source of the token for formatting issues'\n      ]\n    };\n  }\n\n  // Service validation\n  const serviceConfig = TOKEN_PATTERNS[service];\n  if (!serviceConfig) {\n    return {\n      valid: false,\n      error: 'UNKNOWN_SERVICE',\n      message: `Unknown service type: ${service}`,\n      suggestions: [\n        `Supported services: ${Object.keys(TOKEN_PATTERNS).join(', ')}`,\n        'Check the service parameter for typos'\n      ]\n    };\n  }\n\n  // Pattern validation\n  if (!serviceConfig.pattern.test(trimmedToken)) {\n    return {\n      valid: false,\n      error: 'TOKEN_INVALID_FORMAT',\n      message: `Invalid ${service} token format`,\n      expectedFormat: serviceConfig.description,\n      example: serviceConfig.example,\n      actualLength: trimmedToken.length,\n      suggestions: [\n        `Expected format: ${serviceConfig.description}`,\n        `Example: ${serviceConfig.example}`,\n        'Verify you copied the complete token without truncation',\n        'Check for extra characters or missing parts',\n        'Generate a new token if the current one appears corrupted'\n      ]\n    };\n  }\n\n  // Additional security checks\n  const securityIssues = [];\n  \n  // Check for common placeholder values\n  const placeholders = [\n    'your_token_here',\n    'replace_with_token',\n    'token_placeholder',\n    'xxx',\n    'yyy',\n    'zzz',\n    'example',\n    'sample',\n    'test',\n    'demo'\n  ];\n  \n  if (placeholders.some(placeholder => \n    trimmedToken.toLowerCase().includes(placeholder.toLowerCase())\n  )) {\n    securityIssues.push({\n      type: 'PLACEHOLDER_VALUE',\n      message: 'Token appears to be a placeholder value',\n      suggestion: 'Replace with an actual API token from the service provider'\n    });\n  }\n\n  // Check for repeated characters (potential dummy token)\n  if (/(.)\\1{10,}/.test(trimmedToken)) {\n    securityIssues.push({\n      type: 'REPEATED_CHARACTERS',\n      message: 'Token contains many repeated characters',\n      suggestion: 'Ensure this is a real token and not a placeholder'\n    });\n  }\n\n  // Success with optional security warnings\n  return {\n    valid: true,\n    token: trimmedToken,\n    service: service,\n    format: serviceConfig.description,\n    securityIssues: securityIssues.length > 0 ? securityIssues : undefined,\n    validatedAt: new Date().toISOString()\n  };\n}\n\n/**\n * Validates multiple tokens at once\n * @param {Object} tokens - Object with service names as keys and tokens as values\n * @returns {Object} Validation results for all tokens\n */\nexport function validateMultipleTokens(tokens) {\n  const results = {};\n  const errors = [];\n  let allValid = true;\n\n  for (const [service, token] of Object.entries(tokens)) {\n    const result = validateTokenFormat(token, service);\n    results[service] = result;\n    \n    if (!result.valid) {\n      allValid = false;\n      errors.push({\n        service,\n        ...result\n      });\n    }\n  }\n\n  return {\n    allValid,\n    results,\n    errors,\n    summary: {\n      total: Object.keys(tokens).length,\n      valid: Object.values(results).filter(r => r.valid).length,\n      invalid: errors.length\n    }\n  };\n}\n\n/**\n * Sanitizes a token for logging (replaces with safe placeholder)\n * @param {string} token - The token to sanitize\n * @param {string} service - The service type for context\n * @returns {string} Sanitized token safe for logging\n */\nexport function sanitizeTokenForLogging(token, service = 'unknown') {\n  if (!token || typeof token !== 'string') {\n    return '[INVALID_TOKEN]';\n  }\n\n  const trimmed = token.trim();\n  if (!trimmed) {\n    return '[EMPTY_TOKEN]';\n  }\n\n  // Show first 3 and last 3 characters for debugging while hiding the middle\n  if (trimmed.length > 10) {\n    const prefix = trimmed.substring(0, 3);\n    const suffix = trimmed.substring(trimmed.length - 3);\n    return `${prefix}***[${service.toUpperCase()}_TOKEN_REDACTED]***${suffix}`;\n  }\n\n  // For shorter tokens, just show the service type\n  return `[${service.toUpperCase()}_TOKEN_REDACTED]`;\n}\n\n/**\n * Sanitizes error messages to remove any token information\n * @param {string} message - The error message to sanitize\n * @returns {string} Sanitized error message\n */\nexport function sanitizeErrorMessage(message) {\n  if (!message || typeof message !== 'string') {\n    return message;\n  }\n\n  // Remove HuggingFace tokens\n  let sanitized = message.replace(/hf_[a-zA-Z0-9]{34}/g, '[HF_TOKEN_REDACTED]');\n  \n  // Remove Brevo tokens\n  sanitized = sanitized.replace(/xkeysib-[a-f0-9]{64}-[a-zA-Z0-9]{16}/g, '[BREVO_TOKEN_REDACTED]');\n  \n  // Remove potential Base44 tokens (32+ alphanumeric strings that might be tokens)\n  sanitized = sanitized.replace(/\\b[a-zA-Z0-9]{32,}\\b/g, '[POTENTIAL_TOKEN_REDACTED]');\n  \n  // Remove Bearer tokens\n  sanitized = sanitized.replace(/Bearer\\s+[a-zA-Z0-9._-]+/gi, 'Bearer [TOKEN_REDACTED]');\n  \n  // Remove Authorization headers\n  sanitized = sanitized.replace(/Authorization:\\s*[^\\s,]+/gi, 'Authorization: [TOKEN_REDACTED]');\n  \n  return sanitized;\n}\n\n/**\n * Checks if a token is likely expired based on common error patterns\n * @param {string} errorMessage - Error message from API response\n * @returns {boolean} True if token appears to be expired\n */\nexport function isTokenExpired(errorMessage) {\n  if (!errorMessage || typeof errorMessage !== 'string') {\n    return false;\n  }\n\n  const expiredPatterns = [\n    /token.*expired/i,\n    /expired.*token/i,\n    /token.*invalid/i,\n    /invalid.*token/i,\n    /unauthorized/i,\n    /authentication.*failed/i,\n    /access.*denied/i,\n    /forbidden/i,\n    /401/,\n    /403/\n  ];\n\n  return expiredPatterns.some(pattern => pattern.test(errorMessage));\n}\n\n/**\n * Generates troubleshooting steps for token validation failures\n * @param {Object} validationResult - Result from validateTokenFormat\n * @param {string} service - The service type\n * @returns {Object} Troubleshooting information\n */\nexport function generateTokenTroubleshooting(validationResult, service) {\n  const baseSteps = [\n    'Verify you have the correct API token for the service',\n    'Check that the token was copied completely without truncation',\n    'Ensure there are no extra spaces or characters in the environment variable'\n  ];\n\n  const serviceUrls = {\n    huggingface: 'https://huggingface.co/settings/tokens',\n    base44: 'Contact your Base44 administrator for API key',\n    brevo: 'https://app.brevo.com/settings/keys/api'\n  };\n\n  if (!validationResult.valid) {\n    const troubleshooting = {\n      error: validationResult.error,\n      message: validationResult.message,\n      steps: [...baseSteps]\n    };\n\n    // Add specific steps based on error type\n    switch (validationResult.error) {\n      case 'TOKEN_MISSING':\n        troubleshooting.steps.unshift('Set the required environment variable with your API token');\n        break;\n      case 'TOKEN_EMPTY':\n        troubleshooting.steps.unshift('Ensure the environment variable contains a valid token value');\n        break;\n      case 'TOKEN_INVALID_FORMAT':\n        troubleshooting.steps.push(`Expected format: ${validationResult.expectedFormat}`);\n        if (validationResult.example) {\n          troubleshooting.steps.push(`Example format: ${validationResult.example}`);\n        }\n        break;\n    }\n\n    // Add service-specific URL\n    if (serviceUrls[service]) {\n      troubleshooting.steps.push(`Get a new token from: ${serviceUrls[service]}`);\n    }\n\n    // Add restart instruction\n    troubleshooting.steps.push('Restart your application after updating the token');\n\n    return troubleshooting;\n  }\n\n  // Handle security warnings for valid tokens\n  if (validationResult.securityIssues && validationResult.securityIssues.length > 0) {\n    return {\n      warning: 'Token validation passed but security issues detected',\n      issues: validationResult.securityIssues,\n      steps: [\n        'Review the security issues listed above',\n        'Consider generating a new token if using placeholder values',\n        'Ensure you are using a production-ready token'\n      ]\n    };\n  }\n\n  return {\n    success: true,\n    message: 'Token validation passed successfully',\n    steps: [\n      'Token format is valid',\n      'No security issues detected',\n      'Token is ready for use'\n    ]\n  };\n}\n\n/**\n * Pre-request token validation for API calls\n * @param {string} token - The token to validate\n * @param {string} service - The service type\n * @returns {Promise<Object>} Validation result with early error detection\n */\nexport async function preRequestTokenValidation(token, service) {\n  // Basic format validation\n  const formatValidation = validateTokenFormat(token, service);\n  \n  if (!formatValidation.valid) {\n    return {\n      valid: false,\n      canProceed: false,\n      error: formatValidation.error,\n      message: formatValidation.message,\n      troubleshooting: generateTokenTroubleshooting(formatValidation, service)\n    };\n  }\n\n  // Check for security issues\n  if (formatValidation.securityIssues && formatValidation.securityIssues.length > 0) {\n    const hasPlaceholder = formatValidation.securityIssues.some(\n      issue => issue.type === 'PLACEHOLDER_VALUE'\n    );\n    \n    if (hasPlaceholder) {\n      return {\n        valid: false,\n        canProceed: false,\n        error: 'PLACEHOLDER_TOKEN',\n        message: 'Token appears to be a placeholder value and cannot be used for API calls',\n        troubleshooting: generateTokenTroubleshooting(formatValidation, service)\n      };\n    }\n  }\n\n  return {\n    valid: true,\n    canProceed: true,\n    token: formatValidation.token,\n    service: service,\n    validatedAt: formatValidation.validatedAt\n  };\n}\n\nexport default {\n  validateTokenFormat,\n  validateMultipleTokens,\n  sanitizeTokenForLogging,\n  sanitizeErrorMessage,\n  isTokenExpired,\n  generateTokenTroubleshooting,\n  preRequestTokenValidation,\n  TOKEN_PATTERNS\n};", "/**\n * Secure Logger Utility\n * Provides secure logging functions that automatically sanitize sensitive information\n */\n\nimport { sanitizeErrorMessage, sanitizeTokenForLogging } from './tokenValidation.js';\n\n/**\n * Log levels for different types of messages\n */\nconst LOG_LEVELS = {\n  ERROR: 'ERROR',\n  WARN: 'WARN',\n  INFO: 'INFO',\n  DEBUG: 'DEBUG'\n};\n\n/**\n * Sensitive data patterns to sanitize from logs\n */\nconst SENSITIVE_PATTERNS = [\n  // API Keys and tokens\n  { pattern: /hf_[a-zA-Z0-9]{34}/g, replacement: '[HF_TOKEN_REDACTED]' },\n  { pattern: /xkeysib-[a-f0-9]{64}-[a-zA-Z0-9]{16}/g, replacement: '[BREVO_TOKEN_REDACTED]' },\n  { pattern: /Bearer\\s+[a-zA-Z0-9._-]+/gi, replacement: 'Bearer [TOKEN_REDACTED]' },\n  { pattern: /Authorization:\\s*[^\\s,]+/gi, replacement: 'Authorization: [TOKEN_REDACTED]' },\n  \n  // Email addresses\n  { pattern: /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, replacement: '[EMAIL_REDACTED]' },\n  \n  // Phone numbers (US format)\n  { pattern: /\\b\\d{3}-\\d{3}-\\d{4}\\b/g, replacement: '[PHONE_REDACTED]' },\n  { pattern: /\\b\\(\\d{3}\\)\\s*\\d{3}-\\d{4}\\b/g, replacement: '[PHONE_REDACTED]' },\n  \n  // Credit card numbers (basic pattern)\n  { pattern: /\\b\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}[\\s-]?\\d{4}\\b/g, replacement: '[CARD_REDACTED]' },\n  \n  // Social Security Numbers\n  { pattern: /\\b\\d{3}-\\d{2}-\\d{4}\\b/g, replacement: '[SSN_REDACTED]' },\n  \n  // IP Addresses (optional - might be needed for debugging)\n  // { pattern: /\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b/g, replacement: '[IP_REDACTED]' },\n  \n  // Passwords in URLs or form data\n  { pattern: /password[=:]\\s*[^\\s&]+/gi, replacement: 'password=[PASSWORD_REDACTED]' },\n  { pattern: /pwd[=:]\\s*[^\\s&]+/gi, replacement: 'pwd=[PASSWORD_REDACTED]' },\n  \n  // Generic long alphanumeric strings that might be tokens (32+ chars)\n  { pattern: /\\b[a-zA-Z0-9]{32,}\\b/g, replacement: '[POTENTIAL_TOKEN_REDACTED]' }\n];\n\n/**\n * Sanitizes a message by removing or masking sensitive information\n * @param {any} message - The message to sanitize (string, object, or other)\n * @returns {any} Sanitized message\n */\nfunction sanitizeMessage(message) {\n  if (typeof message === 'string') {\n    let sanitized = message;\n    \n    // Apply all sensitive data patterns\n    for (const { pattern, replacement } of SENSITIVE_PATTERNS) {\n      sanitized = sanitized.replace(pattern, replacement);\n    }\n    \n    return sanitized;\n  }\n  \n  if (typeof message === 'object' && message !== null) {\n    if (Array.isArray(message)) {\n      return message.map(item => sanitizeMessage(item));\n    }\n    \n    const sanitized = {};\n    for (const [key, value] of Object.entries(message)) {\n      // Sanitize both keys and values\n      const sanitizedKey = sanitizeMessage(key);\n      const sanitizedValue = sanitizeMessage(value);\n      sanitized[sanitizedKey] = sanitizedValue;\n    }\n    return sanitized;\n  }\n  \n  // For other types (numbers, booleans, etc.), return as-is\n  return message;\n}\n\n/**\n * Creates a structured log entry with metadata\n * @param {string} level - Log level\n * @param {string} component - Component or module name\n * @param {string} message - Log message\n * @param {Object} metadata - Additional metadata\n * @returns {Object} Structured log entry\n */\nfunction createLogEntry(level, component, message, metadata = {}) {\n  return {\n    timestamp: new Date().toISOString(),\n    level: level,\n    component: component,\n    message: sanitizeMessage(message),\n    metadata: sanitizeMessage(metadata),\n    environment: process.env.NODE_ENV || 'development'\n  };\n}\n\n/**\n * Secure logger class with automatic sanitization\n */\nclass SecureLogger {\n  constructor(component) {\n    this.component = component;\n  }\n\n  /**\n   * Logs an error message with automatic sanitization\n   * @param {string} message - Error message\n   * @param {Object} metadata - Additional error metadata\n   */\n  error(message, metadata = {}) {\n    const logEntry = createLogEntry(LOG_LEVELS.ERROR, this.component, message, metadata);\n    console.error(`[${logEntry.component}] ERROR:`, logEntry.message, logEntry.metadata);\n  }\n\n  /**\n   * Logs a warning message with automatic sanitization\n   * @param {string} message - Warning message\n   * @param {Object} metadata - Additional warning metadata\n   */\n  warn(message, metadata = {}) {\n    const logEntry = createLogEntry(LOG_LEVELS.WARN, this.component, message, metadata);\n    console.warn(`[${logEntry.component}] WARN:`, logEntry.message, logEntry.metadata);\n  }\n\n  /**\n   * Logs an info message with automatic sanitization\n   * @param {string} message - Info message\n   * @param {Object} metadata - Additional info metadata\n   */\n  info(message, metadata = {}) {\n    const logEntry = createLogEntry(LOG_LEVELS.INFO, this.component, message, metadata);\n    console.log(`[${logEntry.component}] INFO:`, logEntry.message, logEntry.metadata);\n  }\n\n  /**\n   * Logs a debug message with automatic sanitization (only in development)\n   * @param {string} message - Debug message\n   * @param {Object} metadata - Additional debug metadata\n   */\n  debug(message, metadata = {}) {\n    if (process.env.NODE_ENV === 'development') {\n      const logEntry = createLogEntry(LOG_LEVELS.DEBUG, this.component, message, metadata);\n      console.debug(`[${logEntry.component}] DEBUG:`, logEntry.message, logEntry.metadata);\n    }\n  }\n\n  /**\n   * Logs authentication-related events with enhanced security\n   * @param {string} event - Authentication event type\n   * @param {Object} details - Event details (will be sanitized)\n   */\n  authEvent(event, details = {}) {\n    const sanitizedDetails = {\n      ...sanitizeMessage(details),\n      // Ensure tokens are properly sanitized\n      token: details.token ? sanitizeTokenForLogging(details.token, details.service || 'unknown') : undefined\n    };\n    \n    this.info(`Authentication event: ${event}`, sanitizedDetails);\n  }\n\n  /**\n   * Logs API request/response with automatic sanitization\n   * @param {string} method - HTTP method\n   * @param {string} url - Request URL\n   * @param {number} status - Response status\n   * @param {Object} metadata - Additional request metadata\n   */\n  apiCall(method, url, status, metadata = {}) {\n    const sanitizedUrl = sanitizeMessage(url);\n    const sanitizedMetadata = sanitizeMessage(metadata);\n    \n    const logLevel = status >= 400 ? LOG_LEVELS.ERROR : LOG_LEVELS.INFO;\n    const message = `${method} ${sanitizedUrl} - ${status}`;\n    \n    if (logLevel === LOG_LEVELS.ERROR) {\n      this.error(message, sanitizedMetadata);\n    } else {\n      this.info(message, sanitizedMetadata);\n    }\n  }\n\n  /**\n   * Logs performance metrics\n   * @param {string} operation - Operation name\n   * @param {number} duration - Duration in milliseconds\n   * @param {Object} metadata - Additional performance metadata\n   */\n  performance(operation, duration, metadata = {}) {\n    this.info(`Performance: ${operation} completed in ${duration}ms`, sanitizeMessage(metadata));\n  }\n\n  /**\n   * Logs security events with enhanced detail\n   * @param {string} event - Security event type\n   * @param {Object} details - Event details\n   */\n  security(event, details = {}) {\n    const sanitizedDetails = sanitizeMessage(details);\n    this.warn(`Security event: ${event}`, sanitizedDetails);\n  }\n}\n\n/**\n * Creates a secure logger instance for a component\n * @param {string} component - Component or module name\n * @returns {SecureLogger} Logger instance\n */\nexport function createSecureLogger(component) {\n  return new SecureLogger(component);\n}\n\n/**\n * Global secure logging functions for backward compatibility\n */\nexport const secureLog = {\n  error: (component, message, metadata) => {\n    const logger = createSecureLogger(component);\n    logger.error(message, metadata);\n  },\n  \n  warn: (component, message, metadata) => {\n    const logger = createSecureLogger(component);\n    logger.warn(message, metadata);\n  },\n  \n  info: (component, message, metadata) => {\n    const logger = createSecureLogger(component);\n    logger.info(message, metadata);\n  },\n  \n  debug: (component, message, metadata) => {\n    const logger = createSecureLogger(component);\n    logger.debug(message, metadata);\n  },\n  \n  authEvent: (component, event, details) => {\n    const logger = createSecureLogger(component);\n    logger.authEvent(event, details);\n  },\n  \n  apiCall: (component, method, url, status, metadata) => {\n    const logger = createSecureLogger(component);\n    logger.apiCall(method, url, status, metadata);\n  },\n  \n  performance: (component, operation, duration, metadata) => {\n    const logger = createSecureLogger(component);\n    logger.performance(operation, duration, metadata);\n  },\n  \n  security: (component, event, details) => {\n    const logger = createSecureLogger(component);\n    logger.security(event, details);\n  }\n};\n\n/**\n * Sanitizes any data for safe logging (utility function)\n * @param {any} data - Data to sanitize\n * @returns {any} Sanitized data\n */\nexport function sanitizeForLogging(data) {\n  return sanitizeMessage(data);\n}\n\nexport default {\n  createSecureLogger,\n  secureLog,\n  sanitizeForLogging,\n  LOG_LEVELS\n};", "import { createSecureLogger } from '../../utils/secureLogger.js';\nimport { sanitizeErrorMessage } from '../../utils/tokenValidation.js';\n\n// Create secure logger for this component\nconst logger = createSecureLogger('Documentation Service');\n\n/**\n * Service for interacting with the documentation Q&A API\n */\nclass DocumentationService {\n  constructor() {\n    this.baseURL = '/api/documentation';\n  }\n\n  /**\n   * Ask a question about the O7C Hub documentation\n   * @param {string} question - The question to ask\n   * @param {string} [additionalContext] - Additional context to include\n   * @returns {Promise<Object>} Response with answer and metadata\n   */\n  async askQuestion(question, additionalContext = '') {\n    try {\n      logger.debug('Sending documentation question', {\n        questionLength: question.length,\n        hasAdditionalContext: !!additionalContext\n      });\n\n      const response = await fetch(this.baseURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          question: question,\n          context: additionalContext\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ error: 'Unknown error' }));\n\n        logger.error('Documentation API request failed', {\n          status: response.status,\n          error: sanitizeErrorMessage(errorData.error || 'Unknown error'),\n          errorCode: errorData.errorCode\n        });\n\n        throw new Error(errorData.error || `HTTP ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      logger.info('Documentation question answered successfully', {\n        responseLength: data.answer?.length || 0,\n        relevantSectionsCount: data.metadata?.relevantSections?.length || 0\n      });\n\n      return {\n        success: true,\n        answer: data.answer,\n        metadata: data.metadata,\n        model: data.model,\n        generatedAt: data.generatedAt\n      };\n\n    } catch (error) {\n      logger.error('Error asking documentation question', {\n        error: sanitizeErrorMessage(error.message),\n        question: question.substring(0, 100)\n      });\n\n      return {\n        success: false,\n        error: error.message,\n        answer: null,\n        metadata: null\n      };\n    }\n  }\n\n  /**\n   * Get documentation statistics\n   * @returns {Promise<Object>} Documentation knowledge base statistics\n   */\n  async getDocumentationStats() {\n    try {\n      // This would require a separate endpoint for stats\n      // For now, return basic info\n      return {\n        success: true,\n        stats: {\n          lastUpdated: new Date().toISOString(),\n          status: 'available'\n        }\n      };\n    } catch (error) {\n      logger.error('Error getting documentation stats', {\n        error: sanitizeErrorMessage(error.message)\n      });\n\n      return {\n        success: false,\n        error: error.message,\n        stats: null\n      };\n    }\n  }\n\n  /**\n   * Check if documentation service is available\n   * @returns {Promise<boolean>} True if service is available\n   */\n  async isServiceAvailable() {\n    try {\n      const response = await fetch(this.baseURL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          question: 'test availability'\n        }),\n      });\n\n      return response.ok;\n    } catch (error) {\n      logger.debug('Documentation service availability check failed', {\n        error: sanitizeErrorMessage(error.message)\n      });\n      return false;\n    }\n  }\n}\n\n// Export singleton instance\nexport const documentationService = new DocumentationService();\nexport default documentationService;", "import { Player, School, Coach } from '../entities.js';\nimport { doc, runTransaction } from 'firebase/firestore';\nimport { db } from '../../lib/firebase.js';\nimport {\n  sanitizeErrorMessage,\n  sanitizeTokenForLogging,\n  isTokenExpired\n} from '../../utils/tokenValidation.js';\nimport { createSecureLogger } from '../../utils/secureLogger.js';\nimport { documentationService } from './documentationService.js';\n\n// Create secure logger for this component\nconst logger = createSecureLogger('AI Service');\n\n/**\n * Custom error class for AI service errors with user-friendly messaging\n */\nclass AIServiceError extends Error {\n  constructor(message, errorCode, userMessage, troubleshooting) {\n    super(message);\n    this.name = 'AIServiceError';\n    this.errorCode = errorCode;\n    this.userMessage = userMessage;\n    this.troubleshooting = troubleshooting;\n  }\n}\n\n/**\n * Handles AI service responses and provides user-friendly error information\n * @param {Object} response - Response from invokeLLM\n * @returns {Object} Processed response with user-friendly error handling\n */\nexport function handleAIResponse(response) {\n  if (response.success) {\n    return {\n      success: true,\n      content: response.response,\n      model: response.model,\n      tokens: response.tokens,\n      generatedAt: response.generatedAt,\n      fallback: response.fallback || false\n    };\n  }\n\n  // Handle error responses with user-friendly messaging\n  return {\n    success: false,\n    error: {\n      code: response.errorCode || 'UNKNOWN_ERROR',\n      message: response.userMessage || response.error || 'An unexpected error occurred',\n      troubleshooting: response.troubleshooting || {\n        steps: ['Try again later', 'Contact support if the issue persists']\n      },\n      technical: response.error // Keep technical details for debugging\n    },\n    fallback: response.fallback || false\n  };\n}\n\n/**\n * Determines if an error should trigger a fallback response\n * @param {string} errorCode - The error code from the AI service\n * @returns {boolean} True if fallback should be used\n */\nexport function shouldUseFallback(errorCode) {\n  const fallbackErrorCodes = [\n    'UNAUTHORIZED',\n    'MISSING_TOKEN',\n    'INVALID_TOKEN_FORMAT',\n    'NETWORK_ERROR',\n    'SERVICE_UNAVAILABLE',\n    'MODEL_LOADING',\n    'RATE_LIMITED'\n  ];\n\n  return fallbackErrorCodes.includes(errorCode);\n}\n\n/**\n * Provides fallback response when AI service is unavailable\n * @param {string} query - The user query\n * @param {string} model - The model that was requested\n * @returns {Object} Fallback response object\n */\nfunction getFallbackResponse(query, model) {\n  // Provide a helpful message based on the type of query if possible\n  let fallbackMessage = 'AI features are currently unavailable, but you can still use all other features of the application.';\n  let fallbackSteps = [\n    'Try again later when the AI service is restored',\n    'Contact your administrator if this issue persists',\n    'All other application features remain fully functional'\n  ];\n\n  // Customize message based on query content if available\n  if (query && typeof query === 'string') {\n    if (query.toLowerCase().includes('player') || query.toLowerCase().includes('recruit')) {\n      fallbackMessage = 'AI-powered player analysis is temporarily unavailable. You can still view player profiles, stats, and manage recruiting manually.';\n      fallbackSteps = [\n        'Use the player search and filtering features',\n        'View player profiles and statistics manually',\n        'Try the AI features again later',\n        'Contact support if AI features remain unavailable'\n      ];\n    } else if (query.toLowerCase().includes('team') || query.toLowerCase().includes('roster')) {\n      fallbackMessage = 'AI-powered team analysis is temporarily unavailable. You can still manage teams and rosters using the standard interface.';\n      fallbackSteps = [\n        'Use the team management interface',\n        'Access roster information directly',\n        'Try the AI features again later',\n        'Contact support if AI features remain unavailable'\n      ];\n    }\n  }\n\n  return {\n    success: false,\n    error: 'AI service unavailable',\n    errorCode: 'SERVICE_UNAVAILABLE',\n    userMessage: fallbackMessage,\n    troubleshooting: {\n      steps: fallbackSteps,\n      note: 'This is a graceful fallback - the application continues to work normally without AI features.'\n    },\n    response: null,\n    model: model,\n    tokens: { prompt: 0, completion: 0, total: 0 },\n    generatedAt: new Date().toISOString(),\n    fallback: true\n  };\n}\n\n/**\n * Checks if AI service is available by testing configuration and connectivity\n * @returns {Promise<{available: boolean, status: string, errorCode?: string, message?: string}>} Service availability status\n */\nexport async function isAIServiceAvailable() {\n  try {\n    const response = await fetch('/api/huggingface', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'google/flan-t5-large',\n        inputs: 'test',\n        options: { max_length: 10 }\n      }),\n    });\n\n    // Parse response to get detailed status information\n    const responseData = await response.json().catch(() => ({}));\n\n    if (response.ok) {\n      return {\n        available: true,\n        status: 'operational',\n        message: 'AI service is fully operational'\n      };\n    }\n\n    // Handle specific error cases\n    if (response.status === 401) {\n      return {\n        available: false,\n        status: 'authentication_error',\n        errorCode: responseData.errorCode || 'UNAUTHORIZED',\n        message: responseData.message || 'AI service authentication failed - token may be invalid or expired'\n      };\n    }\n\n    if (response.status === 500 && responseData.errorCode === 'MISSING_TOKEN') {\n      return {\n        available: false,\n        status: 'not_configured',\n        errorCode: 'MISSING_TOKEN',\n        message: 'AI service is not configured - missing API token'\n      };\n    }\n\n    if (response.status === 500 && responseData.errorCode === 'INVALID_TOKEN_FORMAT') {\n      return {\n        available: false,\n        status: 'configuration_error',\n        errorCode: 'INVALID_TOKEN_FORMAT',\n        message: 'AI service configuration error - invalid token format'\n      };\n    }\n\n    if (response.status === 429) {\n      return {\n        available: false,\n        status: 'rate_limited',\n        errorCode: 'RATE_LIMITED',\n        message: 'AI service is rate limited - temporarily unavailable'\n      };\n    }\n\n    if (response.status === 503) {\n      return {\n        available: false,\n        status: 'loading',\n        errorCode: 'MODEL_LOADING',\n        message: 'AI service is loading - should be available shortly'\n      };\n    }\n\n    // Other error status codes\n    return {\n      available: false,\n      status: 'error',\n      errorCode: responseData.errorCode || 'API_ERROR',\n      message: responseData.message || `AI service error: ${response.status}`\n    };\n\n  } catch (error) {\n    // Network or other connectivity errors\n    return {\n      available: false,\n      status: 'unreachable',\n      errorCode: 'NETWORK_ERROR',\n      message: 'Unable to reach AI service - check network connectivity'\n    };\n  }\n}\n\n/**\n * Extracts the user query from the params\n * @param {Object} params - LLM invocation parameters\n * @returns {string} The user query\n */\nfunction getUserQuery(params) {\n  if (params.messages && params.messages.length > 0) {\n    const lastMessage = params.messages[params.messages.length - 1];\n    if (lastMessage.role === 'user') {\n      return lastMessage.content;\n    }\n  }\n  return params.prompt || '';\n}\n\n/**\n * Builds a comprehensive system prompt with O7C Hub expertise\n * @returns {string} Enhanced system prompt\n */\nfunction buildO7CHubSystemPrompt() {\n  return `You are an expert AI assistant for the O7C Hub application, a comprehensive recruiting and athlete management platform for Ohio baseball.\n\n## Your Expertise Areas:\n\n### 1. PLAYER MANAGEMENT\n- Player profiles, statistics, and performance tracking\n- Academic information and GPA monitoring\n- Contact details and communication preferences\n- Medical history and injury tracking\n- Equipment and uniform assignments\n\n### 2. RECRUITING SYSTEM\n- College recruiting process and timelines\n- NCAA compliance and eligibility rules\n- Scholarship offers and commitment tracking\n- Coach communications and evaluations\n- Recruiting calendars and deadlines\n\n### 3. TEAM MANAGEMENT\n- Roster management and player assignments\n- Team scheduling and practice planning\n- Tournament registrations and travel coordination\n- Fee collection and financial tracking\n- Parent communications and updates\n\n### 4. ANALYTICS & INSIGHTS\n- Performance analytics and trend analysis\n- Statistical comparisons and benchmarks\n- Recruiting success metrics\n- Team performance indicators\n- Predictive modeling for player development\n\n### 5. USER ROLES & PERMISSIONS\n- Admin: Full system access and configuration\n- Coach: Team management and player oversight\n- Parent: Child's information and communications\n- Player: Personal profile and recruiting status\n\n## Your Capabilities:\n- Access real-time player, team, and recruiting data\n- Provide data-driven insights and recommendations\n- Answer questions about platform features and functionality\n- Assist with recruiting strategy and player development\n- Help troubleshoot platform issues and guide users\n- Generate reports and analytics summaries\n\n## Communication Guidelines:\n- Be professional, helpful, and encouraging\n- Use clear, concise language appropriate for baseball recruiting\n- Provide specific, actionable advice when possible\n- Reference actual data points and statistics when available\n- Acknowledge limitations when data isn't available\n- Focus on baseball recruiting excellence and athlete development\n\n## Data Access:\nYou have access to comprehensive player databases, recruiting histories, team information, and platform documentation. Use this context to provide informed, accurate responses about the O7C Hub ecosystem.`;\n}\n\n/**\n * Builds conversation context from message history\n * @param {Array} messages - Chat message history\n * @returns {string} Formatted conversation context\n */\nfunction buildConversationContext(messages) {\n  if (!messages || messages.length <= 1) return '';\n\n  const recentMessages = messages.slice(-6); // Last 6 messages for context\n  const contextParts = [];\n\n  for (const message of recentMessages) {\n    if (message.role === 'user') {\n      contextParts.push(`User: ${message.content}`);\n    } else if (message.role === 'assistant') {\n      contextParts.push(`Assistant: ${message.content}`);\n    }\n  }\n\n  return `Recent Conversation:\\n${contextParts.join('\\n')}\\n`;\n}\n\n/**\n * Enhanced data fetching with intelligent query analysis and broader data access\n * @param {string} query - The user query\n * @param {Object} [userContext] - User context for role-based data access\n * @returns {Promise<string>} Formatted data context\n */\nasync function fetchRelevantData(query, userContext = {}) {\n  const data = [];\n  const seenIds = new Set();\n\n  try {\n    // Analyze query for different types of requests\n    const queryLower = query.toLowerCase();\n    const isPlayerQuery = /\\b(player|players|athlete|student)\\b/i.test(queryLower);\n    const isTeamQuery = /\\b(team|roster|squad)\\b/i.test(queryLower);\n    const isRecruitingQuery = /\\b(recruit|recruiting|college|scholarship|commit)\\b/i.test(queryLower);\n    const isAnalyticsQuery = /\\b(stat|performance|analytics|trend|average|gpa)\\b/i.test(queryLower);\n\n    // Extract potential names and identifiers\n    const words = query.split(/\\s+/).filter(word =>\n      word.length > 1 &&\n      /[A-Z]/.test(word) &&\n      !['The', 'And', 'Or', 'But', 'In', 'On', 'At', 'To', 'For', 'Of', 'With', 'By'].includes(word)\n    );\n\n    // Enhanced search patterns\n    const searchPatterns = [\n      // Direct name searches\n      ...words.slice(0, 3),\n      // Extract potential school names (words with multiple capitals)\n      ...query.match(/\\b[A-Z][a-z]+(?:\\s+[A-Z][a-z]+)+\\b/g) || [],\n      // Extract years/class references\n      ...query.match(/\\b(20\\d{2}|class\\s+of\\s+\\d{4})\\b/gi) || []\n    ];\n\n    for (const pattern of searchPatterns.slice(0, 5)) {\n      try {\n        // Enhanced player search with multiple fields\n        if (isPlayerQuery || words.length > 0) {\n          const playerSearches = [\n            { fullname: pattern },\n            { firstName: pattern },\n            { lastName: pattern },\n            { emailAddress: pattern },\n            { commitment: pattern }\n          ];\n\n          for (const search of playerSearches) {\n            const players = await Player.filter(search, 2);\n            if (players && players.length > 0) {\n              for (const player of players) {\n                if (!seenIds.has(`player-${player.id}`)) {\n                  data.push({\n                    type: 'player',\n                    data: {\n                      id: player.id,\n                      name: `${player.firstName} ${player.lastName}`,\n                      position: player.position,\n                      grade: player.grade,\n                      commitment: player.commitment,\n                      gpa: player.gpa,\n                      contact: player.emailAddress,\n                      phone: player.phoneNumber,\n                      stats: player.stats || {}\n                    }\n                  });\n                  seenIds.add(`player-${player.id}`);\n                }\n              }\n            }\n          }\n        }\n\n        // Enhanced school search\n        const schoolSearches = [\n          { name: pattern },\n          { city: pattern },\n          { state: pattern }\n        ];\n\n        for (const search of schoolSearches) {\n          const schools = await School.filter(search, 2);\n          if (schools && schools.length > 0) {\n            for (const school of schools) {\n              if (!seenIds.has(`school-${school.id}`)) {\n                data.push({\n                  type: 'school',\n                  data: {\n                    id: school.id,\n                    name: school.name,\n                    city: school.city,\n                    state: school.state,\n                    type: school.type\n                  }\n                });\n                seenIds.add(`school-${school.id}`);\n              }\n            }\n          }\n        }\n\n        // Enhanced coach search\n        if (isTeamQuery || isRecruitingQuery) {\n          const coachSearches = [\n            { firstName: pattern },\n            { lastName: pattern },\n            { email: pattern }\n          ];\n\n          for (const search of coachSearches) {\n            const coaches = await Coach.filter(search, 2);\n            if (coaches && coaches.length > 0) {\n              for (const coach of coaches) {\n                if (!seenIds.has(`coach-${coach.id}`)) {\n                  data.push({\n                    type: 'coach',\n                    data: {\n                      id: coach.id,\n                      name: `${coach.firstName} ${coach.lastName}`,\n                      email: coach.email,\n                      phone: coach.phoneNumber,\n                      team: coach.teamName\n                    }\n                  });\n                  seenIds.add(`coach-${coach.id}`);\n                }\n              }\n            }\n          }\n        }\n      } catch (e) {\n        logger.debug('Error fetching data for pattern', {\n          pattern: pattern,\n          error: sanitizeErrorMessage(e.message || 'Unknown error'),\n          errorName: e.name\n        });\n      }\n    }\n\n    // Add contextual data based on query type\n    if (isAnalyticsQuery) {\n      try {\n        // Add general analytics context\n        const totalPlayers = await Player.list(undefined, 1); // Just get count\n        data.push({\n          type: 'analytics_context',\n          data: {\n            totalPlayers: totalPlayers?.length || 0,\n            queryType: 'analytics'\n          }\n        });\n      } catch (e) {\n        logger.debug('Error fetching analytics context', {\n          error: sanitizeErrorMessage(e.message || 'Unknown error')\n        });\n      }\n    }\n\n    if (isRecruitingQuery) {\n      try {\n        // Add recruiting context\n        data.push({\n          type: 'recruiting_context',\n          data: {\n            currentSeason: new Date().getFullYear(),\n            recruitingPeriods: ['Fall', 'Winter', 'Spring', 'Summer'],\n            queryType: 'recruiting'\n          }\n        });\n      } catch (e) {\n        logger.debug('Error fetching recruiting context', {\n          error: sanitizeErrorMessage(e.message || 'Unknown error')\n        });\n      }\n    }\n\n  } catch (e) {\n    logger.debug('Error in enhanced data fetching', {\n      error: sanitizeErrorMessage(e.message || 'Unknown error'),\n      errorName: e.name\n    });\n  }\n\n  if (data.length === 0) return '';\n\n  // Limit total data to 12 items and format nicely\n  const limitedData = data.slice(0, 12);\n\n  return '\\nRelevant Application Data:\\n' + limitedData.map(item => {\n    const { type, data: itemData } = item;\n    return `[${type.toUpperCase()}]\\n${JSON.stringify(itemData, null, 2)}`;\n  }).join('\\n\\n');\n}\n\n/**\n * AI service integration with Hugging Face free inference API\n * Replaces base44.integrations.Core.InvokeLLM\n * @param {Object} params - LLM invocation parameters\n * @param {string} params.prompt - The prompt to send to the LLM (legacy)\n * @param {Array} [params.messages] - Chat messages array\n * @param {string} [params.systemPrompt] - System prompt for the conversation\n * @param {string} [params.dataContext] - Data context to enable data-only responses\n * @param {string} [params.model] - Model to use\n * @param {number} [params.temperature] - Temperature setting (not supported by HF free API)\n * @param {boolean} [params.gracefulFallback] - Whether to return fallback response on critical errors\n * @returns {Promise<Object>} LLM response\n */\nexport async function invokeLLM(params) {\n  const model = params.model || 'google/flan-t5-large';\n  const endpoint = '/api/huggingface';\n  const gracefulFallback = params.gracefulFallback !== false; // Default to true\n\n  // Prepare messages\n  let messages;\n  if (params.messages && Array.isArray(params.messages)) {\n    messages = params.messages;\n  } else if (params.prompt) {\n    messages = [{ role: 'user', content: params.prompt }];\n  } else {\n    throw new Error('Either prompt or messages must be provided');\n  }\n\n  // Fetch relevant data context\n  let dataContext = params.dataContext || '';\n  const userQuery = getUserQuery(params);\n  if (userQuery) {\n    try {\n      const fetchedData = await fetchRelevantData(userQuery);\n      if (fetchedData) {\n        dataContext += fetchedData;\n      }\n\n      // Check if this is a documentation-related query and add documentation context\n      const docKeywords = ['how', 'what', 'guide', 'help', 'documentation', 'manual', 'tutorial', 'feature', 'function', 'api', 'endpoint', 'error', 'troubleshoot', 'problem', 'issue'];\n      const isDocumentationQuery = docKeywords.some(keyword =>\n        userQuery.toLowerCase().includes(keyword)\n      );\n\n      if (isDocumentationQuery) {\n        try {\n          logger.debug('Detected documentation query, fetching relevant documentation context', {\n            query: userQuery.substring(0, 100)\n          });\n\n          const docResponse = await documentationService.askQuestion(userQuery);\n          if (docResponse.success && docResponse.answer) {\n            dataContext += `\\n\\nDocumentation Context:\\n${docResponse.answer}`;\n            if (docResponse.metadata?.relevantSections?.length > 0) {\n              dataContext += `\\n\\nRelevant Documentation Sections:\\n${docResponse.metadata.relevantSections.map(s => `- ${s.title} (${s.path})`).join('\\n')}`;\n            }\n          }\n        } catch (docError) {\n          logger.debug('Error fetching documentation context', {\n            error: sanitizeErrorMessage(docError.message || 'Unknown error')\n          });\n          // Don't fail the main AI request if documentation context fails\n        }\n      }\n    } catch (e) {\n      logger.debug('Error fetching relevant data for query', {\n        queryLength: userQuery?.length || 0,\n        error: sanitizeErrorMessage(e.message || 'Unknown error'),\n        errorName: e.name\n      });\n    }\n  }\n\n  // Build comprehensive system prompt with O7C Hub expertise\n  const systemPrompt = params.systemPrompt || buildO7CHubSystemPrompt();\n\n  // Build conversation context from message history\n  const conversationContext = buildConversationContext(messages);\n\n  // Build the prompt for Flan-T5 with enhanced context\n  let prompt = `${systemPrompt}\\n\\n${conversationContext}`;\n\n  // Add data context if provided\n  if (dataContext) {\n    prompt += `\\n\\nRelevant Application Data:\\n${dataContext}`;\n  }\n\n  // For Flan-T5, use only the last user message\n  const lastUserMessage = messages.filter(m => m.role === 'user').pop();\n  if (lastUserMessage) {\n    prompt += `\\n\\nUser Question: ${lastUserMessage.content}`;\n  } else {\n    prompt += `\\n\\nUser Question: ${params.prompt || ''}`;\n  }\n\n  // Prepare request body with enhanced parameters for better responses\n  const requestBody = {\n    model: 'google/flan-t5-large', // Upgrade to larger model for better understanding\n    inputs: prompt,\n    options: {\n      wait_for_model: true,\n      use_cache: false,\n      max_new_tokens: 512,\n      temperature: 0.3,\n      do_sample: true,\n      repetition_penalty: 1.1,\n      length_penalty: 1.0,\n    },\n  };\n\n  try {\n    logger.debug('Making LLM request', {\n      model: model,\n      endpoint: endpoint,\n      promptLength: prompt.length,\n      hasDataContext: !!dataContext,\n      gracefulFallback: gracefulFallback\n    });\n\n    const startTime = Date.now();\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(requestBody),\n    });\n    const duration = Date.now() - startTime;\n\n    logger.performance('LLM API call', duration, {\n      model: model,\n      status: response.status,\n      promptLength: prompt.length\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({\n        error: 'Unknown error',\n        errorCode: 'UNKNOWN_ERROR',\n        message: 'An unexpected error occurred'\n      }));\n\n      // Use server-provided error information when available\n      const errorCode = errorData.errorCode || 'UNKNOWN_ERROR';\n      const userMessage = errorData.message || 'An unexpected error occurred';\n      const troubleshooting = errorData.troubleshooting || { steps: [] };\n\n      // Handle specific authentication errors with enhanced messaging\n      if (response.status === 401) {\n        const authErrorMessage = errorData.message || 'The AI service authentication has failed. This usually means the API token is invalid, expired, or missing.';\n        const authTroubleshooting = errorData.troubleshooting || {\n          steps: [\n            'Contact your system administrator to verify the API token configuration',\n            'The HuggingFace API token may need to be renewed',\n            'Check that the token has proper permissions for the inference API'\n          ],\n          documentation: 'https://huggingface.co/docs/api-inference/quicktour'\n        };\n\n        throw new AIServiceError(\n          'Authentication failed with AI service',\n          errorCode,\n          authErrorMessage,\n          authTroubleshooting\n        );\n      }\n\n      // Handle rate limiting with server-provided details\n      if (response.status === 429) {\n        const rateLimitMessage = errorData.message || 'The AI service is currently experiencing high demand. Please wait before trying again.';\n        const rateLimitTroubleshooting = errorData.troubleshooting || {\n          steps: [\n            'Wait a few minutes before making another request',\n            'Try with shorter input text to reduce processing time',\n            'The service may be experiencing high demand'\n          ]\n        };\n\n        throw new AIServiceError(\n          'Rate limit exceeded',\n          errorCode,\n          rateLimitMessage,\n          rateLimitTroubleshooting\n        );\n      }\n\n      // Handle model loading with server-provided details\n      if (response.status === 503) {\n        const loadingMessage = errorData.message || 'The AI model is currently loading. This is normal for the first request and should resolve shortly.';\n        const loadingTroubleshooting = errorData.troubleshooting || {\n          steps: [\n            'Wait 10-30 seconds and try again',\n            'The model needs time to initialize on first use',\n            'Subsequent requests should be faster'\n          ]\n        };\n\n        throw new AIServiceError(\n          'AI model is loading',\n          errorCode,\n          loadingMessage,\n          loadingTroubleshooting\n        );\n      }\n\n      // Handle bad requests with server-provided details\n      if (response.status === 400) {\n        const badRequestMessage = errorData.message || 'Your input could not be processed by the AI service. Please check your input and try again.';\n        const badRequestTroubleshooting = errorData.troubleshooting || {\n          steps: [\n            'Try with shorter or simpler text',\n            'Remove any special characters that might cause issues',\n            'Ensure your input is in a supported format'\n          ]\n        };\n\n        throw new AIServiceError(\n          'Invalid request to AI service',\n          errorCode,\n          badRequestMessage,\n          badRequestTroubleshooting\n        );\n      }\n\n      // Handle server configuration errors (500 status)\n      if (response.status === 500) {\n        const serverErrorMessage = errorData.message || 'The AI service is experiencing a configuration issue. Please contact your administrator.';\n        const serverTroubleshooting = errorData.troubleshooting || {\n          steps: [\n            'Contact your system administrator',\n            'The AI service may need to be reconfigured',\n            'Try again later as this may be a temporary issue'\n          ]\n        };\n\n        throw new AIServiceError(\n          'AI service configuration error',\n          errorCode,\n          serverErrorMessage,\n          serverTroubleshooting\n        );\n      }\n\n      // Generic error for other status codes using server-provided information\n      throw new AIServiceError(\n        `AI service error: ${response.status}`,\n        errorCode,\n        userMessage,\n        troubleshooting.steps.length > 0 ? troubleshooting : {\n          steps: [\n            'Try again in a few moments',\n            'Check your internet connection',\n            'Contact support if the issue persists'\n          ]\n        }\n      );\n    }\n\n    const data = await response.json();\n\n    // Extract response content\n    let responseContent = '';\n    if (Array.isArray(data) && data[0]?.generated_text) {\n      responseContent = data[0].generated_text.trim();\n    } else if (data.generated_text) {\n      responseContent = data.generated_text.trim();\n    } else {\n      throw new Error('Invalid response from Hugging Face API: no generated_text in response');\n    }\n\n    // Increment AI usage counter\n    try {\n      await runTransaction(db, async (transaction) => {\n        const counterRef = doc(db, 'counters', 'aiUsage');\n        const counterDoc = await transaction.get(counterRef);\n        const newCount = (counterDoc.exists() ? counterDoc.data().count || 0 : 0) + 1;\n        transaction.set(counterRef, { count: newCount }, { merge: true });\n      });\n    } catch (counterError) {\n      logger.warn('Error updating AI usage counter', {\n        error: sanitizeErrorMessage(counterError.message || 'Unknown error'),\n        errorName: counterError.name\n      });\n      // Don't fail the AI call if counter update fails\n    }\n\n    logger.info('LLM request completed successfully', {\n      model: model,\n      responseLength: responseContent.length,\n      duration: duration\n    });\n\n    // Return in expected format\n    return {\n      success: true,\n      response: responseContent,\n      model: model,\n      tokens: {\n        prompt: 0, // HF free API doesn't provide token counts\n        completion: 0,\n        total: 0,\n      },\n      generatedAt: new Date().toISOString(),\n    };\n  } catch (error) {\n    // Enhanced error logging with sanitization\n    logger.error('Error invoking LLM', {\n      error: sanitizeErrorMessage(error.message || 'Unknown error'),\n      errorName: error.name,\n      errorCode: error.errorCode || 'UNKNOWN_ERROR',\n      model: model,\n      queryLength: getUserQuery(params)?.length || 0,\n      gracefulFallback: gracefulFallback\n    });\n\n    // Handle AIServiceError with enhanced user messaging and fallback behavior\n    if (error instanceof AIServiceError) {\n      // Log detailed error information for debugging while showing user-friendly messages\n      logger.error(`AI Service Error [${error.errorCode}]`, {\n        message: sanitizeErrorMessage(error.message),\n        userMessage: error.userMessage,\n        troubleshooting: error.troubleshooting,\n        isTokenExpired: isTokenExpired(error.message),\n        model: model\n      });\n\n      // Provide fallback response for authentication and configuration errors when graceful fallback is enabled\n      if (gracefulFallback && (\n        error.errorCode === 'UNAUTHORIZED' ||\n        error.errorCode === 'MISSING_TOKEN' ||\n        error.errorCode === 'INVALID_TOKEN_FORMAT' ||\n        error.errorCode === 'MODEL_LOADING' ||\n        error.errorCode === 'RATE_LIMITED'\n      )) {\n        logger.info('Providing fallback response due to AI service unavailability', {\n          errorCode: error.errorCode,\n          model: model,\n          queryLength: getUserQuery(params)?.length || 0\n        });\n        return getFallbackResponse(getUserQuery(params), model);\n      }\n\n      return {\n        success: false,\n        error: error.message,\n        errorCode: error.errorCode,\n        userMessage: error.userMessage,\n        troubleshooting: error.troubleshooting,\n        response: null,\n        model: model,\n        tokens: { prompt: 0, completion: 0, total: 0 },\n        generatedAt: new Date().toISOString(),\n      };\n    }\n\n    // Handle network and other unexpected errors with enhanced categorization\n    let errorCode = 'UNKNOWN_ERROR';\n    let userMessage = 'An unexpected error occurred while processing your request.';\n    let troubleshooting = {\n      steps: [\n        'Try again in a few moments',\n        'Check your internet connection',\n        'Contact support if the issue persists'\n      ]\n    };\n\n    // Network connectivity errors\n    if (error.name === 'TypeError' && (error.message.includes('fetch') || error.message.includes('Failed to fetch'))) {\n      errorCode = 'NETWORK_ERROR';\n      userMessage = 'Unable to connect to the AI service. This could be due to network connectivity issues or the service being temporarily unavailable.';\n      troubleshooting = {\n        steps: [\n          'Check your internet connection',\n          'Try refreshing the page',\n          'Wait a few minutes and try again',\n          'The AI service may be temporarily unavailable'\n        ]\n      };\n\n      // Provide fallback for network errors when graceful fallback is enabled\n      if (gracefulFallback) {\n        logger.info('Providing fallback response due to network error', {\n          errorCode: errorCode,\n          model: model,\n          queryLength: getUserQuery(params)?.length || 0\n        });\n        return getFallbackResponse(getUserQuery(params), model);\n      }\n    }\n    // Request timeout errors\n    else if (error.name === 'AbortError') {\n      errorCode = 'REQUEST_TIMEOUT';\n      userMessage = 'The AI service request took too long to complete. This may be due to high demand or network issues.';\n      troubleshooting = {\n        steps: [\n          'Try again with shorter input text',\n          'Check your internet connection speed',\n          'Wait a few minutes as the service may be experiencing high load',\n          'Break longer requests into smaller parts'\n        ]\n      };\n\n      // Provide fallback for timeout errors when graceful fallback is enabled\n      if (gracefulFallback) {\n        logger.info('Providing fallback response due to request timeout', {\n          errorCode: errorCode,\n          model: model,\n          queryLength: getUserQuery(params)?.length || 0\n        });\n        return getFallbackResponse(getUserQuery(params), model);\n      }\n    }\n    // JSON parsing errors (malformed response)\n    else if (error instanceof SyntaxError && error.message.includes('JSON')) {\n      errorCode = 'INVALID_RESPONSE';\n      userMessage = 'The AI service returned an invalid response. This is usually a temporary issue.';\n      troubleshooting = {\n        steps: [\n          'Try again in a few moments',\n          'The AI service may be experiencing temporary issues',\n          'Contact support if this error persists'\n        ]\n      };\n    }\n    // Generic errors with enhanced messaging\n    else {\n      logger.error('Unexpected error type', {\n        name: error.name,\n        error: sanitizeErrorMessage(error.message || 'Unknown error'),\n        errorCode: errorCode,\n        model: model\n      });\n      userMessage = 'An unexpected error occurred while communicating with the AI service.';\n      troubleshooting = {\n        steps: [\n          'Try again in a few moments',\n          'Refresh the page and try again',\n          'Check your internet connection',\n          'Contact support if the issue persists'\n        ]\n      };\n    }\n\n    // Enhanced error logging for debugging with sanitization\n    logger.error(`Unhandled error [${errorCode}]`, {\n      name: error.name,\n      error: sanitizeErrorMessage(error.message || 'Unknown error'),\n      stack: error.stack ? sanitizeErrorMessage(error.stack) : 'No stack trace',\n      model: model,\n      gracefulFallback: gracefulFallback\n    });\n\n    return {\n      success: false,\n      error: error.message,\n      errorCode,\n      userMessage,\n      troubleshooting,\n      response: null,\n      model: model,\n      tokens: { prompt: 0, completion: 0, total: 0 },\n      generatedAt: new Date().toISOString(),\n    };\n  }\n}", "/**\n * Email service using Brevo (formerly Sendinblue) via Vercel proxy for sending emails\n */\n\n/**\n * Send an email using Brevo\n * @param {Object} params - Email parameters\n * @param {string} params.from - Sender email address (must be verified in Brevo)\n * @param {string} params.from_name - Sender name\n * @param {string} params.to - Recipient email address\n * @param {string} params.subject - Email subject\n * @param {string} params.body - Email body content (HTML)\n * @param {string} [params.text] - Plain text version of the email\n * @returns {Promise<Object>} Email send response\n */\nexport async function sendEmail(params) {\n  try {\n    // Validate required parameters\n    if (!params.to || !params.subject || !params.body) {\n      throw new Error('Missing required email parameters: to, subject, body');\n    }\n\n\n    // Prepare email payload for Brevo API\n    const payload = {\n      sender: {\n        email: params.from || 'noreply@o7chub.com',\n        name: params.from_name || 'O7C Hub'\n      },\n      to: [\n        {\n          email: params.to\n        }\n      ],\n      subject: params.subject,\n      htmlContent: params.body,\n      ...(params.text && { textContent: params.text })\n    };\n\n    // Send email via Vercel proxy\n    const response = await fetch('/api/brevo', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ endpoint: '/v3/smtp/email', payload })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(`Brevo API error: ${errorData.message || response.statusText}`);\n    }\n\n    const result = await response.json();\n\n    return {\n      success: true,\n      messageId: result.messageId || `brevo_${Date.now()}`,\n      to: params.to,\n      subject: params.subject,\n      sentAt: new Date().toISOString(),\n      status: 'sent'\n    };\n\n  } catch (error) {\n    console.error('Email send failed:', error);\n\n    // Return error response\n    return {\n      success: false,\n      error: error.message,\n      to: params.to,\n      subject: params.subject,\n      sentAt: new Date().toISOString(),\n      status: 'failed'\n    };\n  }\n}\n\n/**\n * Send an invitation email with a secure registration link\n * @param {Object} params - Invitation parameters\n * @param {string} params.email - Recipient email address\n * @param {string} params.invitationToken - Secure token for registration\n * @param {string} params.inviterName - Name of the person sending the invitation\n * @param {string} [params.role] - Role being invited to (e.g., 'coach', 'player')\n * @param {string} [params.customMessage] - Custom message to include in the email\n * @returns {Promise<Object>} Email send response\n */\nexport async function sendInvitationEmail(params) {\n  try {\n    // Validate required parameters\n    if (!params.email || !params.invitationToken || !params.inviterName) {\n      throw new Error('Missing required invitation parameters: email, invitationToken, inviterName');\n    }\n\n    // Generate registration link (assuming frontend route for registration)\n    const registrationLink = `${window.location.origin}/register?token=${encodeURIComponent(params.invitationToken)}&email=${encodeURIComponent(params.email)}`;\n\n    // Prepare email content\n    const subject = `You're invited to join O7C Hub${params.role ? ` as a ${params.role}` : ''}`;\n\n    const htmlBody = `\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n        <h2 style=\"color: #333;\">Welcome to O7C Hub!</h2>\n\n        <p>Hi there,</p>\n\n        <p><strong>${params.inviterName}</strong> has invited you to join O7C Hub${params.role ? ` as a <strong>${params.role}</strong>` : ''}.</p>\n\n        ${params.customMessage ? `<p>${params.customMessage}</p>` : ''}\n\n        <p>To get started, please click the button below to complete your registration:</p>\n\n        <div style=\"text-align: center; margin: 30px 0;\">\n          <a href=\"${registrationLink}\"\n             style=\"background-color: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block;\">\n            Complete Registration\n          </a>\n        </div>\n\n        <p style=\"color: #666; font-size: 14px;\">\n          If the button doesn't work, you can copy and paste this link into your browser:<br>\n          <a href=\"${registrationLink}\" style=\"color: #007bff;\">${registrationLink}</a>\n        </p>\n\n        <p style=\"color: #666; font-size: 14px;\">\n          This invitation link will expire in 7 days for security reasons.\n        </p>\n\n        <hr style=\"border: none; border-top: 1px solid #eee; margin: 30px 0;\">\n\n        <p style=\"color: #999; font-size: 12px;\">\n          If you didn't expect this invitation, you can safely ignore this email.\n        </p>\n\n        <p style=\"color: #999; font-size: 12px;\">\n          O7C Hub - Connecting athletes with opportunities\n        </p>\n      </div>\n    `;\n\n    const textBody = `\nWelcome to O7C Hub!\n\n${params.inviterName} has invited you to join O7C Hub${params.role ? ` as a ${params.role}` : ''}.\n\n${params.customMessage ? `${params.customMessage}\\n\\n` : ''}\n\nTo complete your registration, visit: ${registrationLink}\n\nThis invitation link will expire in 7 days.\n\nIf you didn't expect this invitation, you can safely ignore this email.\n\nO7C Hub - Connecting athletes with opportunities\n    `;\n\n    // Send the email\n    return await sendEmail({\n      to: params.email,\n      subject: subject,\n      body: htmlBody,\n      text: textBody,\n      from_name: 'O7C Hub Team'\n    });\n\n  } catch (error) {\n    console.error('Invitation email send failed:', error);\n\n    return {\n      success: false,\n      error: error.message,\n      to: params.email,\n      sentAt: new Date().toISOString(),\n      status: 'failed'\n    };\n  }\n}\n\n/**\n * Send admin notification email for new user signup\n * @param {Object} params - Notification parameters\n * @param {string} params.newUserEmail - Email of the newly registered user\n * @param {string} params.newUserRole - Role of the newly registered user\n * @param {string} params.adminEmail - Email address of the admin to notify\n * @returns {Promise<Object>} Email send response\n */\nexport async function sendAdminSignupNotificationEmail(params) {\n  try {\n    // Validate required parameters\n    if (!params.newUserEmail || !params.newUserRole || !params.adminEmail) {\n      throw new Error('Missing required notification parameters: newUserEmail, newUserRole, adminEmail');\n    }\n\n    const subject = `New User Registration: ${params.newUserRole} joined O7C Hub`;\n\n    const htmlBody = `\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n        <h2 style=\"color: #333;\">New User Registration</h2>\n\n        <p>A new user has successfully registered on O7C Hub:</p>\n\n        <div style=\"background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0;\">\n          <p style=\"margin: 5px 0;\"><strong>Email:</strong> ${params.newUserEmail}</p>\n          <p style=\"margin: 5px 0;\"><strong>Role:</strong> ${params.newUserRole}</p>\n          <p style=\"margin: 5px 0;\"><strong>Registered At:</strong> ${new Date().toLocaleString()}</p>\n        </div>\n\n        <p>You can manage this user and view their profile in the admin dashboard.</p>\n\n        <div style=\"text-align: center; margin: 30px 0;\">\n          <a href=\"${window.location.origin}/admin/users\"\n             style=\"background-color: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block;\">\n            View User Management\n          </a>\n        </div>\n\n        <hr style=\"border: none; border-top: 1px solid #eee; margin: 30px 0;\">\n\n        <p style=\"color: #999; font-size: 12px;\">\n          This is an automated notification from O7C Hub.\n        </p>\n\n        <p style=\"color: #999; font-size: 12px;\">\n          O7C Hub - Connecting athletes with opportunities\n        </p>\n      </div>\n    `;\n\n    const textBody = `\nNew User Registration\n\nA new user has successfully registered on O7C Hub:\n\nEmail: ${params.newUserEmail}\nRole: ${params.newUserRole}\nRegistered At: ${new Date().toLocaleString()}\n\nYou can manage this user in the admin dashboard.\n\nView User Management: ${window.location.origin}/admin/users\n\nThis is an automated notification from O7C Hub.\nO7C Hub - Connecting athletes with opportunities\n    `;\n\n    // Send the email\n    return await sendEmail({\n      to: params.adminEmail,\n      subject: subject,\n      body: htmlBody,\n      text: textBody,\n      from_name: 'O7C Hub Admin'\n    });\n\n  } catch (error) {\n    console.error('Admin signup notification email send failed:', error);\n\n    return {\n      success: false,\n      error: error.message,\n      to: params.adminEmail,\n      sentAt: new Date().toISOString(),\n      status: 'failed'\n    };\n  }\n}\n\n/**\n * Create in-app notification for admins about new user signup\n * @param {Object} params - Notification parameters\n * @param {string} params.newUserEmail - Email of the newly registered user\n * @param {string} params.newUserRole - Role of the newly registered user\n * @param {string} params.newUserId - ID of the newly registered user\n * @param {Array<string>} params.adminIds - Array of admin user IDs to notify\n * @returns {Promise<Array<Object>>} Array of created notification responses\n */\nexport async function createAdminSignupNotifications(params) {\n  try {\n    // Validate required parameters\n    if (!params.newUserEmail || !params.newUserRole || !params.newUserId || !params.adminIds || !Array.isArray(params.adminIds)) {\n      throw new Error('Missing required notification parameters: newUserEmail, newUserRole, newUserId, adminIds');\n    }\n\n    const { create } = await import('../entities/Notification.js');\n    const notifications = [];\n\n    for (const adminId of params.adminIds) {\n      const notificationData = {\n        type: 'user_signup',\n        title: 'New User Registration',\n        message: `A new ${params.newUserRole} has registered: ${params.newUserEmail}`,\n        recipientId: adminId,\n        relatedUserId: params.newUserId,\n        isRead: false,\n        createdAt: new Date().toISOString(),\n        metadata: {\n          newUserEmail: params.newUserEmail,\n          newUserRole: params.newUserRole,\n          actionUrl: '/admin/users'\n        }\n      };\n\n      const result = await create(notificationData);\n      notifications.push(result);\n    }\n\n    return notifications;\n\n  } catch (error) {\n    console.error('Failed to create admin signup notifications:', error);\n    throw error;\n  }\n}\n\n/**\n * Send approval confirmation email to user after admin approval\n * @param {Object} params - Approval parameters\n * @param {string} params.email - Email address of the approved user\n * @param {string} params.role - Role of the approved user\n * @param {string} params.approvedBy - Name/email of the admin who approved\n * @returns {Promise<Object>} Email send response\n */\nexport async function sendApprovalConfirmationEmail(params) {\n  try {\n    // Validate required parameters\n    if (!params.email || !params.role || !params.approvedBy) {\n      throw new Error('Missing required approval parameters: email, role, approvedBy');\n    }\n\n    const subject = 'Your O7C Hub Account Has Been Approved!';\n\n    const htmlBody = `\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">\n        <h2 style=\"color: #28a745;\">Welcome to O7C Hub!</h2>\n\n        <p>Great news! Your account has been approved and you can now access O7C Hub.</p>\n\n        <div style=\"background-color: #d4edda; padding: 15px; border-radius: 5px; margin: 20px 0; border-left: 4px solid #28a745;\">\n          <p style=\"margin: 5px 0;\"><strong>Role:</strong> ${params.role}</p>\n          <p style=\"margin: 5px 0;\"><strong>Approved By:</strong> ${params.approvedBy}</p>\n          <p style=\"margin: 5px 0;\"><strong>Approved At:</strong> ${new Date().toLocaleString()}</p>\n        </div>\n\n        <p>You can now log in to your account and start exploring all the features available to you.</p>\n\n        <div style=\"text-align: center; margin: 30px 0;\">\n          <a href=\"${window.location.origin}/login\"\n             style=\"background-color: #28a745; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block;\">\n            Log In to Your Account\n          </a>\n        </div>\n\n        <p>If you have any questions or need assistance, feel free to reach out to our support team.</p>\n\n        <hr style=\"border: none; border-top: 1px solid #eee; margin: 30px 0;\">\n\n        <p style=\"color: #999; font-size: 12px;\">\n          This is an automated confirmation from O7C Hub.\n        </p>\n\n        <p style=\"color: #999; font-size: 12px;\">\n          O7C Hub - Connecting athletes with opportunities\n        </p>\n      </div>\n    `;\n\n    const textBody = `\nWelcome to O7C Hub!\n\nGreat news! Your account has been approved and you can now access O7C Hub.\n\nRole: ${params.role}\nApproved By: ${params.approvedBy}\nApproved At: ${new Date().toLocaleString()}\n\nYou can now log in to your account and start exploring all the features available to you.\n\nLog in here: ${window.location.origin}/login\n\nIf you have any questions or need assistance, feel free to reach out to our support team.\n\nThis is an automated confirmation from O7C Hub.\nO7C Hub - Connecting athletes with opportunities\n    `;\n\n    // Send the email\n    return await sendEmail({\n      to: params.email,\n      subject: subject,\n      body: htmlBody,\n      text: textBody,\n      from_name: 'O7C Hub Team'\n    });\n\n  } catch (error) {\n    console.error('Approval confirmation email send failed:', error);\n\n    return {\n      success: false,\n      error: error.message,\n      to: params.email,\n      sentAt: new Date().toISOString(),\n      status: 'failed'\n    };\n  }\n}\n\n/**\n * Validate email address format\n * @param {string} email - Email address to validate\n * @returns {boolean} True if email format is valid\n */\nexport function validateEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}", "/**\n * Placeholder implementation for file upload service\n * Replaces base44.integrations.Core.UploadFile\n * @param {Object} params - Upload parameters\n * @param {File|Blob} params.file - The file to upload\n * @param {string} params.filename - Name of the file\n * @param {string} [params.contentType] - MIME type of the file\n * @returns {Promise<Object>} Mock upload response\n */\nexport async function uploadFile(params) {\n  console.log('uploadFile called with params:', params);\n\n  // Mock response - in real implementation this would upload to a storage service\n  return {\n    success: true,\n    url: `https://mock-storage.example.com/files/${params.filename}`,\n    id: `file_${Date.now()}`,\n    filename: params.filename,\n    size: params.file?.size || 0,\n    uploadedAt: new Date().toISOString()\n  };\n}", "/**\n * Placeholder implementation for image generation service\n * Replaces base44.integrations.Core.GenerateImage\n * @param {Object} params - Image generation parameters\n * @param {string} params.prompt - Description of the image to generate\n * @param {string} [params.size] - Image size (e.g., '1024x1024')\n * @param {string} [params.style] - Image style\n * @param {number} [params.n] - Number of images to generate\n * @returns {Promise<Object>} Mock image generation response\n */\nexport async function generateImage(params) {\n  console.log('generateImage called with params:', params);\n\n  // Mock response - in real implementation this would generate an actual image\n  return {\n    success: true,\n    images: [\n      {\n        url: `https://mock-image-generator.example.com/images/${Date.now()}.png`,\n        prompt: params.prompt,\n        size: params.size || '1024x1024',\n        generatedAt: new Date().toISOString()\n      }\n    ],\n    usage: {\n      images: params.n || 1\n    }\n  };\n}", "import { invokeLLM } from './integrations/aiService.js';\nimport { sendEmail } from './integrations/emailService.js';\nimport { uploadFile } from './integrations/fileUpload.js';\nimport { generateImage } from './integrations/imageGeneration.js';\n\n// Mock Core object to maintain compatibility\nexport const Core = {\n  InvokeLLM: invokeLLM,\n  SendEmail: sendEmail,\n  UploadFile: uploadFile,\n  GenerateImage: generateImage,\n  ExtractDataFromUploadedFile: async (params) => {\n    console.log('ExtractDataFromUploadedFile called with params:', params);\n    // Mock implementation\n    return {\n      success: true,\n      extractedData: {\n        text: 'Mock extracted text from file',\n        metadata: params\n      }\n    };\n  },\n  CreateFileSignedUrl: async (params) => {\n    console.log('CreateFileSignedUrl called with params:', params);\n    // Mock implementation\n    return {\n      success: true,\n      signedUrl: `https://mock-signed-url.com/${params.fileName || 'file'}`,\n      expiresAt: new Date(Date.now() + 3600000).toISOString() // 1 hour from now\n    };\n  },\n  UploadPrivateFile: async (params) => {\n    console.log('UploadPrivateFile called with params:', params);\n    // Mock implementation\n    return {\n      success: true,\n      fileId: `mock-file-id-${Date.now()}`,\n      url: `https://mock-private-url.com/${params.fileName || 'file'}`\n    };\n  }\n};\n\n// Direct exports for backward compatibility\nexport const InvokeLLM = invokeLLM;\nexport const SendEmail = sendEmail;\nexport const UploadFile = uploadFile;\nexport const GenerateImage = generateImage;\nexport const ExtractDataFromUploadedFile = Core.ExtractDataFromUploadedFile;\nexport const CreateFileSignedUrl = Core.CreateFileSignedUrl;\nexport const UploadPrivateFile = Core.UploadPrivateFile;\n\n\n\n\n\n\n", "// Authentication redirect service for seamless app transitions\n\nimport { getRedirectUrl, shouldRedirectUser, getCurrentApp } from '../utils/routing';\nimport type { UserRole } from '../utils/routing';\n\nexport interface RedirectOptions {\n  preserveQuery?: boolean;\n  preserveHash?: boolean;\n  delay?: number;\n}\n\nexport class AuthRedirectService {\n  private static instance: AuthRedirectService;\n\n  private constructor() {}\n\n  static getInstance(): AuthRedirectService {\n    if (!AuthRedirectService.instance) {\n      AuthRedirectService.instance = new AuthRedirectService();\n    }\n    return AuthRedirectService.instance;\n  }\n\n  /**\n   * Redirect user to their appropriate app based on role\n   */\n  redirectByRole(userRole: UserRole, options: RedirectOptions = {}): void {\n    if (!shouldRedirectUser(userRole)) {\n      return; // User is already in the correct app\n    }\n\n    const redirectUrl = getRedirectUrl(userRole);\n    this.performRedirect(redirectUrl, options);\n  }\n\n  /**\n   * Redirect to a specific app\n   */\n  redirectToApp(appKey: 'o7c-hub' | 'player-portal', options: RedirectOptions = {}): void {\n    const currentApp = getCurrentApp();\n    if (currentApp === appKey) {\n      return; // Already in the target app\n    }\n\n    const baseUrl = appKey === 'o7c-hub'\n      ? (process.env.NODE_ENV === 'production' ? 'https://o7c-hub.vercel.app' : 'http://localhost:3000')\n      : (process.env.NODE_ENV === 'production' ? 'https://player-portal.vercel.app' : 'http://localhost:3001');\n\n    this.performRedirect(baseUrl, options);\n  }\n\n  /**\n   * Perform the actual redirect with options\n   */\n  private performRedirect(url: string, options: RedirectOptions): void {\n    const { preserveQuery = true, preserveHash = true, delay = 0 } = options;\n\n    let finalUrl = url;\n\n    if (preserveQuery && window.location.search) {\n      const urlObj = new URL(url);\n      const currentParams = new URLSearchParams(window.location.search);\n      currentParams.forEach((value, key) => {\n        if (!urlObj.searchParams.has(key)) {\n          urlObj.searchParams.set(key, value);\n        }\n      });\n      finalUrl = urlObj.toString();\n    }\n\n    if (preserveHash && window.location.hash) {\n      finalUrl += window.location.hash;\n    }\n\n    if (delay > 0) {\n      setTimeout(() => {\n        window.location.href = finalUrl;\n      }, delay);\n    } else {\n      window.location.href = finalUrl;\n    }\n  }\n\n  /**\n   * Check if current user should be redirected and perform redirect if needed\n   */\n  checkAndRedirect(userRole: UserRole, options: RedirectOptions = {}): boolean {\n    if (shouldRedirectUser(userRole)) {\n      this.redirectByRole(userRole, options);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get the URL for a specific role without performing redirect\n   */\n  getRoleUrl(userRole: UserRole): string {\n    return getRedirectUrl(userRole);\n  }\n\n  /**\n   * Get the URL for a specific app without performing redirect\n   */\n  getAppUrl(appKey: 'o7c-hub' | 'player-portal'): string {\n    return appKey === 'o7c-hub'\n      ? (process.env.NODE_ENV === 'production' ? 'https://o7c-hub.vercel.app' : 'http://localhost:3000')\n      : (process.env.NODE_ENV === 'production' ? 'https://player-portal.vercel.app' : 'http://localhost:3001');\n  }\n}\n\n// Export singleton instance\nexport const authRedirect = AuthRedirectService.getInstance();", "/**\n * Enhanced Error Handling Utilities for API failures and network issues\n * Provides user-friendly error messages and fallback handling\n */\n\n/**\n * Error types for categorization\n */\nexport const ERROR_TYPES = {\n  NETWORK: 'NETWORK',\n  API: 'API',\n  AUTHENTICATION: 'AUTHENTICATION',\n  AUTHORIZATION: 'AUTHORIZATION',\n  VALIDATION: 'VALIDATION',\n  SERVER: 'SERVER',\n  CLIENT: 'CLIENT',\n  UNKNOWN: 'UNKNOWN'\n};\n\n/**\n * HTTP status code mappings to error types\n */\nconst STATUS_ERROR_MAP = {\n  400: ERROR_TYPES.VALIDATION,\n  401: ERROR_TYPES.AUTHENTICATION,\n  403: ERROR_TYPES.AUTHORIZATION,\n  404: ERROR_TYPES.API,\n  422: ERROR_TYPES.VALIDATION,\n  429: ERROR_TYPES.API,\n  500: ERROR_TYPES.SERVER,\n  502: ERROR_TYPES.SERVER,\n  503: ERROR_TYPES.SERVER,\n  504: ERROR_TYPES.SERVER\n};\n\n/**\n * Network error patterns\n */\nconst NETWORK_ERRORS = [\n  'NetworkError',\n  'TypeError',\n  'fetch',\n  'network',\n  'timeout',\n  'ECONNRESET',\n  'ENOTFOUND',\n  'ECONNREFUSED'\n];\n\n/**\n * Categorizes an error based on its type and message\n * @param {Error} error - The error to categorize\n * @param {number} status - HTTP status code if available\n * @returns {string} - Error type from ERROR_TYPES\n */\nexport function categorizeError(error, status) {\n  // If status code is provided, use it for categorization\n  if (status && STATUS_ERROR_MAP[status]) {\n    return STATUS_ERROR_MAP[status];\n  }\n\n  // Check for network-related errors\n  if (error && typeof error.message === 'string') {\n    const message = error.message.toLowerCase();\n    if (NETWORK_ERRORS.some(pattern => message.includes(pattern.toLowerCase()))) {\n      return ERROR_TYPES.NETWORK;\n    }\n  }\n\n  // Check for authentication/authorization errors\n  if (error && error.message) {\n    const message = error.message.toLowerCase();\n    if (message.includes('unauthorized') || message.includes('invalid token')) {\n      return ERROR_TYPES.AUTHENTICATION;\n    }\n    if (message.includes('forbidden') || message.includes('access denied')) {\n      return ERROR_TYPES.AUTHORIZATION;\n    }\n  }\n\n  // Default to API error for API-related issues\n  if (error && (error.name === 'ApiError' || error.status)) {\n    return ERROR_TYPES.API;\n  }\n\n  return ERROR_TYPES.UNKNOWN;\n}\n\n/**\n * Gets user-friendly error message based on error type\n * @param {string} errorType - The categorized error type\n * @param {string} originalMessage - Original error message for context\n * @returns {string} - User-friendly error message\n */\nexport function getUserFriendlyMessage(errorType, originalMessage = '') {\n  const messages = {\n    [ERROR_TYPES.NETWORK]: 'Unable to connect to the server. Please check your internet connection and try again.',\n    [ERROR_TYPES.API]: 'The service is temporarily unavailable. Please try again in a few moments.',\n    [ERROR_TYPES.AUTHENTICATION]: 'Your session has expired. Please sign in again.',\n    [ERROR_TYPES.AUTHORIZATION]: 'You don\\'t have permission to perform this action.',\n    [ERROR_TYPES.VALIDATION]: 'Please check your input and try again.',\n    [ERROR_TYPES.SERVER]: 'The server is experiencing issues. Please try again later.',\n    [ERROR_TYPES.CLIENT]: 'Something went wrong on our end. Please try again.',\n    [ERROR_TYPES.UNKNOWN]: 'An unexpected error occurred. Please try again or contact support if the issue persists.'\n  };\n\n  return messages[errorType] || messages[ERROR_TYPES.UNKNOWN];\n}\n\n/**\n * Gets appropriate fallback actions for different error types\n * @param {string} errorType - The categorized error type\n * @returns {Array} - Array of fallback action objects\n */\nexport function getFallbackActions(errorType) {\n  const actions = {\n    [ERROR_TYPES.NETWORK]: [\n      { label: 'Retry', action: 'retry', primary: true },\n      { label: 'Check Connection', action: 'checkConnection' }\n    ],\n    [ERROR_TYPES.API]: [\n      { label: 'Try Again', action: 'retry', primary: true },\n      { label: 'Refresh Page', action: 'refresh' }\n    ],\n    [ERROR_TYPES.AUTHENTICATION]: [\n      { label: 'Sign In', action: 'login', primary: true },\n      { label: 'Go Home', action: 'home' }\n    ],\n    [ERROR_TYPES.AUTHORIZATION]: [\n      { label: 'Go Back', action: 'back', primary: true },\n      { label: 'Contact Support', action: 'support' }\n    ],\n    [ERROR_TYPES.VALIDATION]: [\n      { label: 'Fix Errors', action: 'fix', primary: true },\n      { label: 'Reset Form', action: 'reset' }\n    ],\n    [ERROR_TYPES.SERVER]: [\n      { label: 'Try Again', action: 'retry', primary: true },\n      { label: 'Contact Support', action: 'support' }\n    ],\n    [ERROR_TYPES.CLIENT]: [\n      { label: 'Refresh Page', action: 'refresh', primary: true },\n      { label: 'Clear Cache', action: 'clearCache' }\n    ],\n    [ERROR_TYPES.UNKNOWN]: [\n      { label: 'Try Again', action: 'retry', primary: true },\n      { label: 'Contact Support', action: 'support' }\n    ]\n  };\n\n  return actions[errorType] || actions[ERROR_TYPES.UNKNOWN];\n}\n\n/**\n * Enhanced error handler for API calls\n * @param {Error} error - The error that occurred\n * @param {Object} context - Additional context (component, action, etc.)\n * @returns {Object} - Processed error information\n */\nexport function handleApiError(error, context = {}) {\n  const errorType = categorizeError(error, error.status);\n  const userMessage = getUserFriendlyMessage(errorType, error.message);\n  const fallbackActions = getFallbackActions(errorType);\n\n  // Log error for debugging/monitoring\n  const errorInfo = {\n    type: errorType,\n    message: error.message,\n    stack: error.stack,\n    status: error.status,\n    context,\n    timestamp: new Date().toISOString(),\n    userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : '',\n    url: typeof window !== 'undefined' ? window.location.href : ''\n  };\n\n  console.error('API Error:', errorInfo);\n\n  // Store error for debugging (in production, send to error tracking service)\n  if (typeof window !== 'undefined' && typeof sessionStorage !== 'undefined') {\n    const errors = JSON.parse(sessionStorage.getItem('app_errors') || '[]');\n    errors.push(errorInfo);\n    // Keep only last 20 errors\n    if (errors.length > 20) {\n      errors.splice(0, errors.length - 20);\n    }\n    sessionStorage.setItem('app_errors', JSON.stringify(errors));\n  }\n\n  return {\n    type: errorType,\n    message: userMessage,\n    originalError: error,\n    actions: fallbackActions,\n    canRetry: [ERROR_TYPES.NETWORK, ERROR_TYPES.API, ERROR_TYPES.SERVER].includes(errorType),\n    shouldLogout: errorType === ERROR_TYPES.AUTHENTICATION,\n    errorId: `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  };\n}\n\n/**\n * Retry wrapper for API calls with exponential backoff\n * @param {Function} apiCall - The API function to retry\n * @param {number} maxRetries - Maximum number of retries\n * @param {number} baseDelay - Base delay in milliseconds\n * @param {Object} context - Context for error handling\n * @returns {Promise} - The API call result or throws handled error\n */\nexport async function withRetry(apiCall, maxRetries = 3, baseDelay = 1000, context = {}) {\n  let lastError;\n\n  for (let attempt = 0; attempt <= maxRetries; attempt++) {\n    try {\n      return await apiCall();\n    } catch (error) {\n      lastError = error;\n\n      // Don't retry client errors (4xx except 429)\n      if (error.status && error.status >= 400 && error.status < 500 && error.status !== 429) {\n        throw handleApiError(error, context);\n      }\n\n      // Don't retry on last attempt\n      if (attempt === maxRetries) {\n        break;\n      }\n\n      // Exponential backoff delay\n      const delay = baseDelay * Math.pow(2, attempt);\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n  }\n\n  throw handleApiError(lastError, context);\n}\n\n/**\n * Hook for handling async operations with error states\n * @param {Function} asyncOperation - The async operation to handle\n * @param {Object} options - Options for error handling\n * @returns {Object} - State and handlers for the operation\n */\nexport function useAsyncErrorHandler(asyncOperation, options = {}) {\n  const [state, setState] = React.useState({\n    loading: false,\n    error: null,\n    data: null,\n    lastError: null\n  });\n\n  const execute = React.useCallback(async (...args) => {\n    setState(prev => ({ ...prev, loading: true, error: null }));\n\n    try {\n      const result = await asyncOperation(...args);\n      setState(prev => ({\n        ...prev,\n        loading: false,\n        data: result,\n        error: null\n      }));\n      return result;\n    } catch (error) {\n      const handledError = handleApiError(error, options.context);\n      setState(prev => ({\n        ...prev,\n        loading: false,\n        error: handledError,\n        lastError: error\n      }));\n      throw handledError;\n    }\n  }, [asyncOperation, options.context]);\n\n  const retry = React.useCallback(() => {\n    if (state.lastError) {\n      return execute();\n    }\n  }, [execute, state.lastError]);\n\n  return {\n    ...state,\n    execute,\n    retry,\n    clearError: () => setState(prev => ({ ...prev, error: null }))\n  };\n}\n\n// React import for hooks (this will be handled by the importing component)\nimport React from 'react';\n\nexport default {\n  ERROR_TYPES,\n  categorizeError,\n  getUserFriendlyMessage,\n  getFallbackActions,\n  handleApiError,\n  withRetry,\n  useAsyncErrorHandler\n};", "import {\n  collection,\n  doc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  onSnapshot,\n  query,\n  orderBy,\n  limit,\n  where,\n  getDocs,\n  serverTimestamp,\n  Timestamp,\n  writeBatch,\n  getDoc,\n  setDoc,\n} from 'firebase/firestore';\nimport {\n  ref,\n  uploadBytes,\n  getDownloadURL,\n  deleteObject,\n} from 'firebase/storage';\nimport { db, storage } from '../lib/firebase';\nimport { handleApiError, ERROR_TYPES } from '../utils/errorHandler';\nimport type {\n  ChatMessage,\n  ChatRoom,\n  ChatParticipant,\n  UserPresence,\n  ChatPermissions,\n  ChatServiceConfig,\n  ChatEvent,\n} from '../types/chat';\n\nexport class ChatService {\n  private config: ChatServiceConfig;\n  private eventListeners: Map<string, (event: ChatEvent) => void> = new Map();\n\n  constructor(config: ChatServiceConfig) {\n    this.config = config;\n  }\n\n  // Room Management\n  async createRoom(\n    name: string,\n    type: ChatRoom['type'],\n    participants: string[],\n    createdBy: string,\n    metadata?: ChatRoom['metadata']\n  ): Promise<string> {\n    try {\n      const roomData = {\n        name,\n        type,\n        participants: participants.map(userId => ({\n          userId,\n          joinedAt: serverTimestamp(),\n          isOnline: false,\n        })),\n        createdAt: serverTimestamp(),\n        createdBy,\n        lastActivity: serverTimestamp(),\n        isActive: true,\n        metadata: metadata || {},\n      };\n\n      const docRef = await addDoc(collection(db, 'chatRooms'), roomData);\n      return docRef.id;\n    } catch (error) {\n      throw handleApiError(error, { operation: 'createRoom', context: 'ChatService' });\n    }\n  }\n\n  async joinRoom(roomId: string, userId: string, userName: string, role: string): Promise<void> {\n    try {\n      const roomRef = doc(db, 'chatRooms', roomId);\n      const roomSnap = await getDoc(roomRef);\n\n      if (!roomSnap.exists()) {\n        const error = new Error('Room not found');\n        (error as any).status = 404;\n        throw error;\n      }\n\n      const roomData = roomSnap.data();\n      const participantIndex = roomData.participants.findIndex((p: any) => p.userId === userId);\n\n      if (participantIndex === -1) {\n        // Add new participant\n        roomData.participants.push({\n          userId,\n          userName,\n          role,\n          joinedAt: serverTimestamp(),\n          isOnline: true,\n          lastSeen: serverTimestamp(),\n        });\n      } else {\n        // Update existing participant\n        roomData.participants[participantIndex].isOnline = true;\n        roomData.participants[participantIndex].lastSeen = serverTimestamp();\n      }\n\n      await updateDoc(roomRef, {\n        participants: roomData.participants,\n        lastActivity: serverTimestamp(),\n      });\n\n      // Update user presence\n      await this.updatePresence(userId, true, roomId);\n    } catch (error) {\n      throw handleApiError(error, { operation: 'joinRoom', roomId, context: 'ChatService' });\n    }\n  }\n\n  async leaveRoom(roomId: string, userId: string): Promise<void> {\n    const roomRef = doc(db, 'chatRooms', roomId);\n    const roomSnap = await getDoc(roomRef);\n\n    if (!roomSnap.exists()) {\n      return;\n    }\n\n    const roomData = roomSnap.data();\n    const participantIndex = roomData.participants.findIndex((p: any) => p.userId === userId);\n\n    if (participantIndex !== -1) {\n      roomData.participants[participantIndex].isOnline = false;\n      roomData.participants[participantIndex].lastSeen = serverTimestamp();\n\n      await updateDoc(roomRef, {\n        participants: roomData.participants,\n        lastActivity: serverTimestamp(),\n      });\n    }\n\n    // Update user presence\n    await this.updatePresence(userId, false);\n  }\n\n  // Message Management\n  async sendMessage(\n    roomId: string,\n    senderId: string,\n    senderName: string,\n    content: string,\n    type: ChatMessage['type'] = 'text',\n    replyTo?: string\n  ): Promise<string> {\n    const messageData = {\n      chatId: roomId,\n      senderId,\n      senderName,\n      content: this.encryptMessage(content),\n      timestamp: serverTimestamp(),\n      type,\n      replyTo,\n      edited: false,\n    };\n\n    const docRef = await addDoc(collection(db, 'chatMessages'), messageData);\n\n    // Update room's last message and activity\n    await updateDoc(doc(db, 'chatRooms', roomId), {\n      lastMessage: {\n        id: docRef.id,\n        ...messageData,\n        timestamp: serverTimestamp(),\n      },\n      lastActivity: serverTimestamp(),\n    });\n\n    return docRef.id;\n  }\n\n  async editMessage(messageId: string, content: string): Promise<void> {\n    await updateDoc(doc(db, 'chatMessages', messageId), {\n      content: this.encryptMessage(content),\n      edited: true,\n      editedAt: serverTimestamp(),\n    });\n  }\n\n  async deleteMessage(messageId: string): Promise<void> {\n    await deleteDoc(doc(db, 'chatMessages', messageId));\n  }\n\n  // File Upload\n  async uploadFile(roomId: string, file: File, senderId: string): Promise<string> {\n    if (this.config.maxFileSize && file.size > this.config.maxFileSize) {\n      throw new Error(`File size exceeds maximum allowed size of ${this.config.maxFileSize} bytes`);\n    }\n\n    if (this.config.allowedFileTypes && !this.config.allowedFileTypes.includes(file.type)) {\n      throw new Error(`File type ${file.type} is not allowed`);\n    }\n\n    const fileRef = ref(storage, `chat/${roomId}/${Date.now()}_${file.name}`);\n    await uploadBytes(fileRef, file);\n    return getDownloadURL(fileRef);\n  }\n\n  // Real-time Subscriptions\n  subscribeToRoom(roomId: string, callback: (messages: ChatMessage[]) => void): () => void {\n    const q = query(\n      collection(db, 'chatMessages'),\n      where('chatId', '==', roomId),\n      orderBy('timestamp', 'desc'),\n      limit(50)\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const messages = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        timestamp: doc.data().timestamp?.toDate() || new Date(),\n        content: this.decryptMessage(doc.data().content),\n      })) as ChatMessage[];\n\n      callback(messages.reverse());\n    });\n\n    return unsubscribe;\n  }\n\n  subscribeToRoomUpdates(roomId: string, callback: (room: ChatRoom) => void): () => void {\n    const unsubscribe = onSnapshot(doc(db, 'chatRooms', roomId), (snapshot) => {\n      if (snapshot.exists()) {\n        const data = snapshot.data();\n        const room: ChatRoom = {\n          id: snapshot.id,\n          name: data.name,\n          type: data.type,\n          participants: data.participants || [],\n          createdAt: data.createdAt?.toDate() || new Date(),\n          createdBy: data.createdBy,\n          lastActivity: data.lastActivity?.toDate() || new Date(),\n          lastMessage: data.lastMessage ? {\n            ...data.lastMessage,\n            timestamp: data.lastMessage.timestamp?.toDate() || new Date(),\n            content: this.decryptMessage(data.lastMessage.content),\n          } : undefined,\n          isActive: data.isActive,\n          metadata: data.metadata,\n        };\n        callback(room);\n      }\n    });\n\n    return unsubscribe;\n  }\n\n  subscribeToPresence(callback: (presences: UserPresence[]) => void): () => void {\n    const unsubscribe = onSnapshot(collection(db, 'userPresence'), (snapshot) => {\n      const presences = snapshot.docs.map(doc => ({\n        ...doc.data(),\n        lastSeen: doc.data().lastSeen?.toDate() || new Date(),\n      })) as UserPresence[];\n      callback(presences);\n    });\n\n    return unsubscribe;\n  }\n\n  // Presence Management\n  private async updatePresence(userId: string, isOnline: boolean, currentRoom?: string): Promise<void> {\n    const presenceRef = doc(db, 'userPresence', userId);\n    await setDoc(presenceRef, {\n      userId,\n      isOnline,\n      lastSeen: serverTimestamp(),\n      currentRoom,\n    }, { merge: true });\n  }\n\n  // Permissions\n  async getPermissions(userId: string, roomId: string): Promise<ChatPermissions> {\n    const roomSnap = await getDoc(doc(db, 'chatRooms', roomId));\n    if (!roomSnap.exists()) {\n      return {\n        canSendMessages: false,\n        canEditMessages: false,\n        canDeleteMessages: false,\n        canAddParticipants: false,\n        canRemoveParticipants: false,\n        canViewHistory: false,\n      };\n    }\n\n    const room = roomSnap.data();\n    const participant = room.participants.find((p: any) => p.userId === userId);\n\n    if (!participant) {\n      return {\n        canSendMessages: false,\n        canEditMessages: false,\n        canDeleteMessages: false,\n        canAddParticipants: false,\n        canRemoveParticipants: false,\n        canViewHistory: false,\n      };\n    }\n\n    // Role-based permissions\n    const isAdmin = participant.role === 'admin';\n    const isCoach = participant.role === 'coach';\n    const isPlayer = participant.role === 'player';\n    const isParent = participant.role === 'parent';\n\n    return {\n      canSendMessages: true,\n      canEditMessages: isAdmin || isCoach,\n      canDeleteMessages: isAdmin,\n      canAddParticipants: isAdmin || isCoach,\n      canRemoveParticipants: isAdmin,\n      canViewHistory: true,\n    };\n  }\n\n  // Encryption/Decryption (basic implementation - enhance for production)\n  private encryptMessage(content: string): string {\n    if (!this.config.encryptionKey) return content;\n    // Implement proper encryption here\n    return btoa(content); // Base64 for now\n  }\n\n  private decryptMessage(content: string): string {\n    if (!this.config.encryptionKey) return content;\n    // Implement proper decryption here\n    try {\n      return atob(content); // Base64 for now\n    } catch {\n      return content;\n    }\n  }\n\n  // Event System\n  on(eventType: string, callback: (event: ChatEvent) => void): void {\n    this.eventListeners.set(eventType, callback);\n  }\n\n  off(eventType: string): void {\n    this.eventListeners.delete(eventType);\n  }\n\n  private emitEvent(event: ChatEvent): void {\n    const listener = this.eventListeners.get(event.type);\n    if (listener) {\n      listener(event);\n    }\n  }\n\n  // Cleanup\n  async cleanupInactiveRooms(): Promise<void> {\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n\n    const q = query(\n      collection(db, 'chatRooms'),\n      where('lastActivity', '<', Timestamp.fromDate(thirtyDaysAgo)),\n      where('isActive', '==', true)\n    );\n\n    const snapshot = await getDocs(q);\n    const batch = writeBatch(db);\n\n    snapshot.docs.forEach(doc => {\n      batch.update(doc.ref, { isActive: false });\n    });\n\n    await batch.commit();\n  }\n}", "import { collection, addDoc, query, where, orderBy, onSnapshot, updateDoc, doc, getDocs } from 'firebase/firestore';\nimport { db } from '../lib/firebase';\nimport type { ChatNotification } from '../types/chat';\n\nexport class NotificationService {\n  private userId: string;\n\n  constructor(userId: string) {\n    this.userId = userId;\n  }\n\n  // Create notification\n  async createNotification(\n    chatId: string,\n    messageId: string,\n    type: ChatNotification['type'],\n    fromUserId: string\n  ): Promise<void> {\n    // Don't create notification for own messages\n    if (fromUserId === this.userId) return;\n\n    const notificationData = {\n      userId: this.userId,\n      chatId,\n      messageId,\n      type,\n      isRead: false,\n      createdAt: new Date(),\n    };\n\n    await addDoc(collection(db, 'chatNotifications'), notificationData);\n  }\n\n  // Get notifications\n  subscribeToNotifications(callback: (notifications: ChatNotification[]) => void): () => void {\n    const q = query(\n      collection(db, 'chatNotifications'),\n      where('userId', '==', this.userId),\n      orderBy('createdAt', 'desc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const notifications = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        createdAt: doc.data().createdAt?.toDate() || new Date(),\n      })) as ChatNotification[];\n      callback(notifications);\n    });\n\n    return unsubscribe;\n  }\n\n  // Mark notification as read\n  async markAsRead(notificationId: string): Promise<void> {\n    await updateDoc(doc(db, 'chatNotifications', notificationId), {\n      isRead: true,\n    });\n  }\n\n  // Mark all notifications as read for a chat\n  async markChatAsRead(chatId: string): Promise<void> {\n    const q = query(\n      collection(db, 'chatNotifications'),\n      where('userId', '==', this.userId),\n      where('chatId', '==', chatId),\n      where('isRead', '==', false)\n    );\n\n    // Get the documents first\n    const querySnapshot = await getDocs(q);\n    const updatePromises: Promise<void>[] = [];\n\n    querySnapshot.forEach((document) => {\n      updatePromises.push(updateDoc(document.ref, { isRead: true }));\n    });\n\n    await Promise.all(updatePromises);\n  }\n\n  // Get unread count\n  subscribeToUnreadCount(callback: (count: number) => void): () => void {\n    const q = query(\n      collection(db, 'chatNotifications'),\n      where('userId', '==', this.userId),\n      where('isRead', '==', false)\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      callback(snapshot.size);\n    });\n\n    return unsubscribe;\n  }\n\n  // Browser notification (if permission granted)\n  async showBrowserNotification(title: string, body: string, chatId: string): Promise<void> {\n    if ('Notification' in window && Notification.permission === 'granted') {\n      const notification = new Notification(title, {\n        body,\n        icon: '/o7clogo.png', // Update with your app icon\n        tag: chatId, // Prevents duplicate notifications\n      });\n\n      notification.onclick = () => {\n        // Focus on chat window/tab\n        window.focus();\n        // Navigate to chat\n        notification.close();\n      };\n    }\n  }\n\n  // Request notification permission\n  async requestPermission(): Promise<boolean> {\n    if (!('Notification' in window)) {\n      return false;\n    }\n\n    if (Notification.permission === 'granted') {\n      return true;\n    }\n\n    if (Notification.permission !== 'denied') {\n      const permission = await Notification.requestPermission();\n      return permission === 'granted';\n    }\n\n    return false;\n  }\n}", "// Authentication middleware for API endpoints\n\nimport type { UserRole } from '../utils/routing';\n\nexport interface AuthenticatedRequest {\n  user?: {\n    uid: string;\n    email: string;\n    role: UserRole;\n  };\n  body: any;\n  query: any;\n  params: any;\n}\n\nexport interface AuthMiddlewareOptions {\n  requiredRoles?: UserRole[];\n  requireAllRoles?: boolean;\n  requiredPermissions?: Array<{ resource: string; action: string }>;\n  requireAllPermissions?: boolean;\n}\n\nexport const createAuthMiddleware = (options: AuthMiddlewareOptions = {}) => {\n  return (req: AuthenticatedRequest, res: any, next: any) => {\n    try {\n      // Check if user is authenticated\n      if (!req.user) {\n        return res.status(401).json({\n          error: 'Authentication required',\n          message: 'You must be logged in to access this resource'\n        });\n      }\n\n      // Check role requirements\n      if (options.requiredRoles && options.requiredRoles.length > 0) {\n        const hasRequiredRole = options.requireAllRoles\n          ? options.requiredRoles.every(role => req.user!.role === role)\n          : options.requiredRoles.includes(req.user!.role);\n\n        if (!hasRequiredRole) {\n          return res.status(403).json({\n            error: 'Insufficient permissions',\n            message: 'Your role does not have access to this resource'\n          });\n        }\n      }\n\n      // Check permission requirements (if implemented)\n      if (options.requiredPermissions && options.requiredPermissions.length > 0) {\n        // This would integrate with the permission checking utilities\n        // For now, we'll assume permissions are checked at the application level\n        console.warn('Permission checking not yet implemented in middleware');\n      }\n\n      // User is authorized, continue to next middleware/route handler\n      next();\n    } catch (error) {\n      console.error('Auth middleware error:', error);\n      return res.status(500).json({\n        error: 'Internal server error',\n        message: 'An error occurred while checking authentication'\n      });\n    }\n  };\n};\n\n// Convenience middleware functions for common use cases\nexport const requireAdmin = createAuthMiddleware({ requiredRoles: ['admin'] });\nexport const requireCoach = createAuthMiddleware({ requiredRoles: ['admin', 'coach'] });\nexport const requirePlayer = createAuthMiddleware({ requiredRoles: ['player', 'parent'] });\nexport const requireParent = createAuthMiddleware({ requiredRoles: ['parent'] });\nexport const requireAuthenticated = createAuthMiddleware();"],
  "mappings": "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",
  "names": ["limit", "adminEmails", "user", "userData", "getRedirectUrl", "React", "React", "ref", "import_jsx_runtime", "Slot", "props", "Slottable", "Fragment", "param", "hasPermission", "import_jsx_runtime", "ref", "React", "import_jsx_runtime", "ref", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_react", "import_react", "import_react", "import_jsx_runtime", "_a", "limit", "filter", "update", "orderBy", "limit", "filter", "update", "User", "auth", "logger", "query", "query", "logger", "delay", "import_react", "doc", "doc"]
}
